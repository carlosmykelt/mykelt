{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/auth/login.component.html","webpack:///src/app/auth/registro.component.html","webpack:///src/app/index/index.component.html","webpack:///src/app/menu/menu.component.html","webpack:///src/app/post/editar-post.component.html","webpack:///src/app/post/full-post.component.html","webpack:///src/app/post/lista-post.component.html","webpack:///src/app/post/nuevo-post.component.html","webpack:///src/app/producto/detalle-producto.component.html","webpack:///src/app/producto/editar-producto.component.html","webpack:///src/app/producto/lista-producto.component.html","webpack:///src/app/producto/nuevo-producto.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/login.component.css","webpack:///src/app/auth/login.component.ts","webpack:///src/app/auth/registro.component.css","webpack:///src/app/auth/registro.component.ts","webpack:///src/app/guards/login.guard.ts","webpack:///src/app/guards/prod-guard.service.ts","webpack:///src/app/index/index.component.css","webpack:///src/app/index/index.component.ts","webpack:///src/app/interceptors/prod-interceptor.service.ts","webpack:///src/app/menu/menu.component.css","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/models/login-usuario.ts","webpack:///src/app/models/nuevo-usuario.ts","webpack:///src/app/models/producto.ts","webpack:///src/app/pipes/filter.pipe.ts","webpack:///src/app/post/editar-post.component.css","webpack:///src/app/post/editar-post.component.ts","webpack:///src/app/post/full-post.component.css","webpack:///src/app/post/full-post.component.ts","webpack:///src/app/post/lista-post.component.css","webpack:///src/app/post/lista-post.component.ts","webpack:///src/app/post/nuevo-post.component.css","webpack:///src/app/post/nuevo-post.component.ts","webpack:///src/app/producto/detalle-producto.component.css","webpack:///src/app/producto/detalle-producto.component.ts","webpack:///src/app/producto/editar-producto.component.css","webpack:///src/app/producto/editar-producto.component.ts","webpack:///src/app/producto/lista-producto.component.css","webpack:///src/app/producto/lista-producto.component.ts","webpack:///src/app/producto/nuevo-producto.component.css","webpack:///src/app/producto/nuevo-producto.component.ts","webpack:///src/app/service/auth.service.ts","webpack:///src/app/service/post.service.ts","webpack:///src/app/service/producto.service.ts","webpack:///src/app/service/token.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","data","expectedRol","redirectTo","pathMatch","AppRoutingModule","imports","forRoot","relativeLinkResolution","AppComponent","title","selector","template","AppModule","declarations","progressBar","progressAnimation","preventDuplicates","positionClass","providers","provide","useValue","bootstrap","LoginComponent","tokenService","authService","router","toastr","cargandoLogin","loginUsuario","email","password","window","localStorage","UserEmail","login","subscribe","setToken","token","console","log","user","navigate","err","errMsj","error","message","timeOut","RegistroComponent","cargandoRegistro","nuevoUsuario","name","password_confirmation","nuevo","success","mensaje","LoginGuard","next","state","isLogged","providedIn","ProdGuardService","route","realRol","isAdmin","indexOf","IndexComponent","DecimalPipe","nombreUsuario","getUserName","userEmail","ProdInterceptorService","intReq","getToken","clone","headers","set","handle","interceptorProvider","useClass","multi","MenuComponent","logOut","LoginUsuario","NuevoUsuario","Producto","price","FilterPipe","value","arg","length","resultPosts","post","toLowerCase","push","EditarPostComponent","postService","activatedRoute","sanitizer","body","portada","extraerBase64","$event","reject","unsafeImg","URL","createObjectURL","image","bypassSecurityTrustUrl","reader","FileReader","readAsDataURL","onload","base","result","onerror","snapshot","params","detail","fd","FormData","append","update","event","archivoCapturado","target","files","imagen","previsualizacion","FullPostComponent","volver","ListaPostComponent","posts","cargarPosts","lista","NuevoPostComponent","Editor","archivos","editor","ckEditor","instance","config","height","toolbarGroups","groups","save","DetalleProductoComponent","productoService","producto","cargando","EditarProductoComponent","cargandoeditar","ListaProductoComponent","productos","productosCartera","duplicado","listaAdmin","idcartera","filterPost","cargarProductos","NuevoProductoComponent","$","document","ready","popover","placement","trigger","AuthService","httpClient","authURL","PostService","postURL","get","ProductoService","productoURL","put","TOKEN_KEY","TokenService","roles","removeItem","setItem","getItem","payload","split","payloadDecoded","atob","values","JSON","parse","username","sub","clear","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- <app-menu></app-menu> No lo ponemos aquí porque queremos que se recargue con botones distintos dependiendo de si está logueado o no -->\\r\\n\\r\\n<router-outlet></router-outlet>\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n    <div class=\\\"container mb-5 text-center h1 mt-5\\\">\\r\\n        Inicia sesión o crea una cuenta con tu correo \\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container mb-5 d-flex justify-content-center\\\">\\r\\n        <div class=\\\"card col-lg-5 mt-5 mx-0 px-0\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <ul class=\\\"nav nav-tabs justify-content-center\\\">\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link active\\\" routerLink=\\\"/login\\\">Iniciar Sesión</a>\\r\\n                        <!-- va a login, tiene el active porque está en esta pestaña,\\r\\n                    en el registro tendrá el active en la etiqueta de registro -->\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/registro\\\">Crear Cuenta</a> <!-- va a registro -->\\r\\n                    </li>\\r\\n\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin()\\\" novalidate>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"email\\\">Email</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\"\\r\\n                            [(ngModel)]=\\\"email\\\" required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"password\\\">Contraseña</label>\\r\\n                        <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"\\r\\n                            required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n\\r\\n                        <div *ngIf=\\\"cargandoLogin==true\\\" class=\\\"text-center my-5\\\"> \\r\\n                            <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div> \\r\\n                        </div>\\r\\n\\r\\n                        <button class=\\\"btn boton shadow btn-block\\\" [disabled]=\\\"!f.valid\\\">\\r\\n                            <i class=\\\"fas fa-sign-in-alt\\\"></i> Iniciar Sesión</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\"container mb-5 text-center h1 mt-5\\\">\\r\\n  Inicia sesión o crea una cuenta con tu correo \\r\\n</div>\\r\\n\\r\\n  <div class=\\\"container mb-5 d-flex justify-content-center\\\">\\r\\n    <div class=\\\"card col-lg-5 mt-5 mx-0 px-0\\\">\\r\\n      <div class=\\\"card-header \\\">\\r\\n        <ul class=\\\"nav nav-tabs justify-content-center\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Iniciar Sesión</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" routerLink=\\\"/registro\\\">Crear Cuenta</a>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <!-- formulario de login -->\\r\\n        <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onRegister()\\\" novalidate>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Nombre</label>\\r\\n            <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\" required>\\r\\n            <!-- ngModel, misma variable que en login.c.ts.\\r\\n                  Es required -->\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Contraseña</label>\\r\\n            <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password_confirmation\\\">Confirmación</label>\\r\\n            <input type=\\\"password\\\" name=\\\"password_confirmation\\\" id=\\\"password_confirmation\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password_confirmation\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">Correo Electrónico</label>\\r\\n            <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <div *ngIf=\\\"cargandoRegistro==true\\\" class=\\\"text-center my-5\\\"> \\r\\n              <div class=\\\"spinner-border\\\" role=\\\"status\\\">                \\r\\n              </div> \\r\\n            </div>\\r\\n            <button class=\\\"btn boton shadow btn-block\\\" [disabled]=\\\"!f.valid\\\">\\r\\n              <i class=\\\"fas fa-sign-in-alt\\\"></i> Crear Cuenta</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"container my-5 col-11 col-sm-7 justify-content-center bg-white border rounded shadow-lg py-5 px-md-5\\\">\\r\\n        <div *ngIf=\\\"nombreUsuario\\\" class=\\\"m-lg-5\\\">\\r\\n\\r\\n            <div class=\\\"h5 mt-4\\\">Cuenta iniciada con el email {{userEmail}}.  </div>\\r\\n            <div class=\\\"h5 mt-4\\\">Puede acceder a la selección de productos. </div>\\r\\n\\r\\n            <div class=\\\"mt-5 d-flex justify-content-center\\\">\\r\\n                <button class=\\\"btn boton btn-block col-lg-4 shadow \\\" routerLink=\\\"/lista\\\">\\r\\n                    Ir a la lista\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"!nombreUsuario\\\" class=\\\"m-lg-5\\\">\\r\\n            <p class=\\\"h1\\\">Acceda a la lista de productos</p>\\r\\n            <p class=\\\"h5 mt-5 font-weight-normal\\\">\\r\\n                Esta lista contiene productos con un alto volumen de ventas.\\r\\n            </p>\\r\\n            <div class=\\\"d-flex justify-content-lg-center\\\">\\r\\n\\r\\n                <div class=\\\"mt-4 d-flex flex-column flex-lg-row mb-1 col-lg-10\\\">\\r\\n                    <div class=\\\"col d-flex justify-content-center mt-3\\\">\\r\\n                        <button class=\\\"btn btn-outline-dark btn-block\\\" routerLink=\\\"/login\\\">\\r\\n                            Iniciar Sesión\\r\\n                        </button>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col d-flex justify-content-center mt-3\\\">\\r\\n                        <button class=\\\"btn boton shadow btn-block\\\" routerLink=\\\"/registro\\\">\\r\\n                            Registrarse\\r\\n                        </button>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\";","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light  bg-white mx-lg-5\\\">\\r\\n\\r\\n  <a class=\\\"navbar-brand my-sm-2\\\" href=\\\"#\\\"> Lista de productos </a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\"\\r\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse \\\" id=\\\"navbarNav\\\">\\r\\n    <ul class=\\\"navbar-nav ml-auto text-center my-4 my-sm-2\\\">\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"p-3 menulink\\\" routerLink=\\\"/lista\\\">\\r\\n          <div class=\\\"btn menulink my-2\\\">Productos</div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"p-3 menulink\\\" routerLink=\\\"/articulos\\\">\\r\\n          <div class=\\\"btn menulink my-2\\\">Artículos</div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!isLogged\\\">\\r\\n        <a class=\\\" p-3\\\" routerLink=\\\"/login\\\">\\r\\n          <div class=\\\"btn menulink my-2\\\">Iniciar Sesión</div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!isLogged\\\">\\r\\n        <a class=\\\"p-3 menulink\\\" routerLink=\\\"/registro\\\">\\r\\n          <div class=\\\"btn  boton shadow my-2\\\">Registrarse </div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"isLogged\\\" (click)=\\\"onLogOut()\\\">\\r\\n        <a class=\\\"p-3 menulink\\\">\\r\\n          <div class=\\\"btn boton shadow my-2\\\"><i class=\\\"fas fa-power-off\\\"></i> Cerrar Sesión</div>\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n</nav>\";","export default \"<app-menu></app-menu>\\n\\n<div class=\\\"py-5\\\">\\n\\n    <div class=\\\" container col-lg-7 bg-white  my-5 py-4 px-3 \\\">\\n        <form (ngSubmit)=\\\"onUpdate()\\\" novalidate #f=\\\"ngForm\\\">\\n\\n            <div class=\\\"form-group\\\">\\n                <!-- capturarFile($event) -->\\n                \\n                <input (change)=\\\"captura($event)\\\" type=\\\"file\\\">  \\n                <!-- Change detecta cuando el input tiene un cambio.\\n                Le ponemos la función capturar con el parámetro evento -->\\n            </div>  \\n\\n            <div *ngIf=\\\"previsualizacion\\\">\\n                <img width=\\\"500px\\\" [src]=\\\"previsualizacion\\\" alt=\\\"\\\">\\n            </div>\\n            \\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"post.name\\\" required placeholder=\\\"Escribe aquí el nombre\\\">\\n            </div>\\n\\n            <div class=\\\"form-group mt-5\\\">\\n                <ckeditor  data=\\\"<p>Hello, world!</p><br>hello\\\" type=\\\"inline\\\" [config]=\\\"{ extraPlugins: 'divarea' }\\\" [(ngModel)]=\\\"post.body\\\" name=\\\"body\\\" ></ckeditor>\\n            </div> \\n        \\n            <div class=\\\"d-flex justify-content-around mt-5\\\">\\n            <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/articulos\\\"> Volver </a>\\n            <button class=\\\"btn boton btn-block\\\" [disabled]=\\\"!f.valid\\\">\\n                Guardar\\n            </button>\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\";","export default \"<app-menu></app-menu>\\n\\n\\n\\n  <!-- <div *ngIf=\\\"cargando==true\\\" class=\\\"text-center my-5\\\"> \\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div> \\n </div> -->\\n\\n<div *ngIf=\\\"post\\\" class=\\\"py-5\\\">\\n  <div class=\\\"container col-lg-7 bg-white  my-5 py-4 px-3\\\">\\n    <!-- [ngStyle]=\\\"{ width : 200px; }\\\" -->\\n\\n    <div class=\\\"display-4 font-weight-bold mb-5\\\">{{post.name}}</div> \\n</div>\\n\\n<div class=\\\"mx-2\\\">\\n      <img [src]=\\\"'http://127.0.0.1/storage/' + post.image\\\" class=\\\"img-fluid corner mx-auto d-block mb-5\\\" >\\n</div>\\n\\n    <br>\\n\\n    <div class=\\\"container col-lg-7 bg-white  my-5 py-4 px-3\\\">\\n      <div [innerHTML]=\\\"post.body\\\"></div>\\n    </div>\\n  \\n</div>\";","export default \"<app-menu></app-menu>\\n\\n<div class=\\\"mb-5\\\">\\n  <br>\\n</div>\\n\\n\\n<p class=\\\"h3 text-center\\\"> Artículos </p>\\n  <br>\\n\\n<p class=\\\"text-center\\\">\\n   <button class=\\\"btn btn-primary mb-5\\\" routerLink=\\\"nuevo\\\"> Crear artículo </button>\\n</p> \\n\\n<!-- <div class=\\\"container d-flex justify-content-center\\\"> -->\\n\\n  <div class=\\\"container d-flex justify-content-around flex-wrap\\\"> \\n    <div class=\\\"col-lg-5\\\" *ngFor=\\\"let post of posts\\\">\\n\\n    <!-- <a routerLink=\\\"/{{post.id}}\\\"> -->\\n\\n      <div class=\\\"card mb-5 cardstyle mx-0 my-0 px-4 pt-4 pb-0 corner shadow\\\">\\n\\n          <!-- {{post.image}}     intento con d-inline, miraré otro -->\\n          <table class=\\\"table table-borderless d-inline\\\">\\n            <tr>\\n              <!-- <td> <img src=\\\"'http://localhost:4200/' + post.image\\\"> </td> -->\\n              <a routerLink=\\\"/{{post.id}}\\\">\\n                <img [src]=\\\"'http://127.0.0.1/storage/' + post.image\\\" class=\\\"img-fluid cornerlista mx-auto d-block\\\" >\\n              </a>\\n\\n            </tr>\\n            <tr>\\n              <td>\\n                <a class=\\\"h2\\\" routerLink=\\\"/{{post.id}}\\\">{{post.name}}</a>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                Probando. Este sería el header del artículo. Abajo tengo comentado la forma de mostrarlo bien.\\n                <!-- <div [innerHTML]=\\\"post.body\\\"></div> -->\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <button class=\\\"btn btn-dark btn-block corner mt-3\\\" routerLink=\\\"/{{post.id}}\\\">Ver artículo </button>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <button class=\\\"btn btn-outline-dark btn-sm corner\\\" routerLink=\\\"editar/{{post.id}}\\\">Editar </button>\\n                &nbsp;\\n                <button class=\\\"btn btn-outline-dark btn-sm corner\\\" (click)=\\\"borrar(post.id)\\\">Borrar </button>\\n              </td>  \\n            </tr>\\n\\n              <!-- Ponemos div innerhtml para que renderice el html -->\\n              <!-- {{post.body}} -->\\n          </table>\\n        \\n      </div>\\n    <!-- </a> -->\\n    </div>\\n  </div>\\n<!-- \\n</div> -->\";","export default \"<app-menu></app-menu>\\n\\n    <!-- ckeditor -->\\n    <!-- <script src=\\\"https://cdn.ckeditor.com/ckeditor5/29.1.0/classic/ckeditor.js\\\"></script> -->\\n\\n<!-- <div id=\\\"editor\\\">\\n    <p>This is some sample content.</p>\\n</div> -->\\n\\n\\n\\n<!-- <script>\\n    ClassicEditor\\n        .create( document.querySelector( '#editor' ) )\\n        .catch( error => {\\n            console.error( error );\\n        } );\\n</script> -->\\n\\n\\n<div class=\\\"py-5\\\">\\n    <!-- col-lg-4 -->\\n    <!-- border rounded shadow-->\\n    <div class=\\\" container col-lg-7 bg-white  my-5 py-4 px-3 \\\">\\n        <!-- onCreate() -->\\n        <form (ngSubmit)=\\\"crea()\\\" novalidate #f=\\\"ngForm\\\">\\n\\n\\n            <div class=\\\"form-group\\\">\\n                <!-- capturarFile($event) -->\\n                \\n                <input (change)=\\\"captura($event)\\\" type=\\\"file\\\">  \\n                <!-- Change detecta cuando el input tiene un cambio.\\n                Le ponemos la función capturar con el parámetro evento -->\\n            </div>  \\n\\n            <div *ngIf=\\\"previsualizacion\\\">\\n                <img width=\\\"500px\\\" [src]=\\\"previsualizacion\\\" alt=\\\"\\\">\\n            </div>\\n            \\n\\n            <div class=\\\"form-group\\\">\\n                <!-- <label for=\\\"name\\\">Nombre</label> -->\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required placeholder=\\\"Escribe aquí el nombre\\\">\\n            </div>\\n\\n            <div class=\\\"form-group mt-5\\\">\\n                \\n                <!-- <label class=\\\"my-4\\\" for=\\\"body\\\">Cuerpo del artículo</label> -->\\n                <!-- class=\\\"form-control\\\" -->\\n\\n                <!-- ESTE ES EL ANTERIOR, QUE ESTABA BIEN -->\\n                <!-- <ckeditor  data=\\\"<p>Hello, world!</p><br>hello\\\" type=\\\"inline\\\" [config]=\\\"{ extraPlugins: 'divarea' }\\\" [(ngModel)]=\\\"body\\\" name=\\\"body\\\" ></ckeditor> -->\\n                <!-- ESTE ES EL ANTERIOR, QUE ESTABA BIEN -->\\n\\n                <ckeditor [editor]=\\\"Editor\\\" data=\\\"<p>Hello, world!</p>\\\" [(ngModel)]=\\\"body\\\" name=\\\"body\\\"></ckeditor>\\n\\n\\n            </div> \\n\\n            <!-- <div class=\\\"form-group\\\">\\n                <label for=\\\"body\\\">Cuerpo del artículo</label>\\n\\n\\n\\n                <input type=\\\"textarea\\\" class=\\\"form-control\\\" id=\\\"body\\\" name=\\\"body\\\" [(ngModel)]=\\\"body\\\" required>\\n            </div>             -->\\n        \\n            <div class=\\\"d-flex justify-content-around mt-5\\\">\\n            <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/articulos\\\"> Volver </a>\\n            <button class=\\\"btn boton btn-block\\\" [disabled]=\\\"!f.valid\\\">\\n                <!-- <i class=\\\"fas fa-plus-circle\\\"></i>  -->\\n                Crear\\n            </button>\\n            </div>\\n\\n\\n\\n\\n        </form>\\n\\n\\n    </div>\\n</div>\\n\\n\\n<!-- \\n<button class=\\\"btn btn-danger\\\" (click)=\\\"imprime()\\\">Imprime</button>\\n\\n<ckeditor data=\\\"<p>Hello, world!</p><br>hello\\\" type=\\\"inline\\\"  [(ngModel)]=\\\"body\\\" name=\\\"body\\\" readOnly=\\\"true\\\" ></ckeditor>\\n -->\\n\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\"container  text-center mt-5 \\\">\\r\\n  <span class=\\\"\\\" id=\\\"\\\"></span>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"cargando==true\\\" class=\\\"text-center my-5\\\"> \\r\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div> \\r\\n </div>\\r\\n\\r\\n<div *ngIf=\\\"producto\\\" class=\\\"py-5\\\">\\r\\n  <div class=\\\"container my-4 py-4 px-md-3\\\">\\r\\n    <div class=\\\"card shadow\\\">\\r\\n      <ul class=\\\"list-group list-group-flush\\\">\\r\\n        <li class=\\\"list-group-item\\\"><b>Name: </b>{{producto.name}}</li>\\r\\n        <li class=\\\"list-group-item\\\"><b>Price: </b>{{producto.price}}</li>\\r\\n      </ul>\\r\\n      \\r\\n      <div class=\\\"card-footer bg-white\\\">\\r\\n        <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/lista\\\"> Volver </a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n    <div *ngIf=\\\"cargandoeditar==true\\\" class=\\\"text-center my-5\\\"> \\r\\n        <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div> \\r\\n     </div>\\r\\n     \\r\\n<div *ngIf=\\\"producto\\\" class=\\\"py-5\\\">\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"container col-lg-4 mt-5 bg-white border rounded my-5 py-4 px-3 shadow\\\">\\r\\n        <form (ngSubmit)=\\\"onUpdate()\\\" novalidate #f=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"nombre\\\">Nombre</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"producto.name\\\"\\r\\n                    required>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"price\\\">Precio</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" [(ngModel)]=\\\"producto.price\\\" required>\\r\\n            </div>\\r\\n \\r\\n            <button class=\\\"btn boton btn-block\\\" [disabled]=\\\"!f.valid\\\">\\r\\n                <i class=\\\"fas fa-pencil-alt\\\"></i> Actualizar</button>\\r\\n            <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/lista\\\"> Volver </a>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"my-3\\\">\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\"mb-5\\\">\\r\\n  <br>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n\\r\\n  <span class=\\\"h1 font-weight-bold\\\">Productos </span>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group mt-5\\\">\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"filterPost\\\" placeholder=\\\"Buscar...\\\" [(ngModel)]=\\\"filterPost\\\">\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"mt-5 mb-0 table-responsive\\\">\\r\\n    <table class=\\\"table table-striped table-hover border\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Nombre</th>\\r\\n\\r\\n          <th scope=\\\"col\\\">Precio</th>\\r\\n          <th scope=\\\"col\\\">Ver</th>\\r\\n\\r\\n\\r\\n          <th scope=\\\"col\\\">Editar</th>\\r\\n\\r\\n          <th scope=\\\"col\\\">Borrar</th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n\\r\\n        <tr *ngFor=\\\"let producto of productos | filter:filterPost\\\">\\r\\n          <td class=\\\"align-middle\\\">{{producto.name}} </td>\\r\\n          <td class=\\\"align-middle\\\"> {{producto.price}}</td>\\r\\n          <td class=\\\"align-middle\\\"><button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/detalle/{{producto.id}}\\\"><i\\r\\n                class=\\\"far fa-eye\\\"></i> <!-- Ver --> </button></td>\\r\\n\\r\\n\\r\\n          <td class=\\\"align-middle\\\"><button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/editar/{{producto.id}}\\\"><i\\r\\n                class=\\\"far fa-edit\\\"></i> </button></td>\\r\\n          <td class=\\\"align-middle\\\"><button class=\\\"btn btn-outline-dark\\\" (click)=\\\"borrar(producto.id)\\\"><i\\r\\n                class=\\\"far fa-trash-alt\\\"></i> </button></td>\\r\\n        </tr>\\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <div *ngIf=\\\"cargando==true\\\" class=\\\"text-center my-5\\\">\\r\\n      <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mt-4 mb-5\\\">\\r\\n    <button class=\\\"btn boton shadow btn-lg\\\" routerLink=\\\"/nuevo\\\">\\r\\n      <i class=\\\"fas fa-plus-circle\\\"></i> Nuevo Producto</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\" py-5\\\">\\r\\n    <div class=\\\"col-lg-4 container bg-white border rounded my-5 py-4 px-3 shadow\\\">\\r\\n        <form (ngSubmit)=\\\"onCreate()\\\" novalidate #f=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Nombre</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"price\\\">Precio</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" required>\\r\\n            </div>            \\r\\n        \\r\\n\\r\\n            <button class=\\\"btn boton btn-block\\\" [disabled]=\\\"!f.valid\\\">\\r\\n                <i class=\\\"fas fa-plus-circle\\\"></i> Crear</button>\\r\\n            <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/lista\\\"> Volver </a>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListaProductoComponent } from './producto/lista-producto.component';\r\nimport { DetalleProductoComponent } from './producto/detalle-producto.component';\r\nimport { NuevoProductoComponent } from './producto/nuevo-producto.component';\r\nimport { EditarProductoComponent } from './producto/editar-producto.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { RegistroComponent } from './auth/registro.component';\r\nimport { ProdGuardService } from './guards/prod-guard.service';\r\n\r\n\r\n\r\nimport { LoginGuard } from './guards/login.guard';\r\nimport { ListaPostComponent } from './post/lista-post.component';\r\nimport { NuevoPostComponent } from './post/nuevo-post.component';\r\nimport { FullPostComponent } from './post/full-post.component';\r\nimport { EditarPostComponent } from './post/editar-post.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: IndexComponent },\r\n\r\n  { path: 'login', component: LoginComponent, canActivate: [LoginGuard] },\r\n  { path: 'registro', component: RegistroComponent, canActivate: [LoginGuard] },\r\n\r\n  { path: 'lista', component: ListaProductoComponent, canActivate: [ProdGuardService], data: { expectedRol: ['admin', 'user'] } },\r\n  { path: 'detalle/:id', component: DetalleProductoComponent, canActivate: [ProdGuardService], data: { expectedRol: ['admin', 'user'] } },\r\n\r\n  { path: 'nuevo', component: NuevoProductoComponent, canActivate: [ProdGuardService], data: { expectedRol: ['admin', 'user'] } },\r\n  { path: 'editar/:id', component: EditarProductoComponent, canActivate: [ProdGuardService], data: { expectedRol: ['admin', 'user'] } },\r\n\r\n  { path: 'articulos', component: ListaPostComponent },\r\n  { path: 'articulos/nuevo', component: NuevoPostComponent },\r\n  { path: ':id', component: FullPostComponent },\r\n  { path: 'articulos/editar/:id', component: EditarPostComponent },\r\n\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'productos';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ListaProductoComponent } from './producto/lista-producto.component';\r\nimport { DetalleProductoComponent } from './producto/detalle-producto.component';\r\nimport { NuevoProductoComponent } from './producto/nuevo-producto.component';\r\nimport { EditarProductoComponent } from './producto/editar-producto.component';\r\nimport { interceptorProvider } from './interceptors/prod-interceptor.service';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { RegistroComponent } from './auth/registro.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { IndexComponent } from './index/index.component';\r\n\r\nimport { DecimalPipe, registerLocaleData } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\nimport { ListaPostComponent } from './post/lista-post.component';\r\nimport { NuevoPostComponent } from './post/nuevo-post.component';\r\nimport { EditarPostComponent } from './post/editar-post.component';\r\n//import { CKEditorModule } from 'ckeditor4-angular';\r\nimport { FullPostComponent } from './post/full-post.component';\r\nimport { bottom, right } from '@popperjs/core';\r\n\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\n\r\n\r\n\r\n\r\n// import * as bootstrap from \"bootstrap\";\r\n// import * as $ from \"jquery\";\r\n\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListaProductoComponent,\r\n    DetalleProductoComponent,\r\n    NuevoProductoComponent,\r\n    EditarProductoComponent,\r\n    LoginComponent,\r\n    RegistroComponent,\r\n    MenuComponent,\r\n    IndexComponent,\r\n    FilterPipe,\r\n    ListaPostComponent,\r\n    NuevoPostComponent,\r\n    EditarPostComponent,\r\n    FullPostComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n    progressBar: true,\r\n    progressAnimation: 'increasing',\r\n    preventDuplicates: true,\r\n    positionClass: 'toast-bottom-right',\r\n    // closeButton: true\r\n    }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    CKEditorModule\r\n\r\n  ],\r\n  providers: [\r\n    interceptorProvider,\r\n    DecimalPipe, //Para poner decimales con el sistema europeo\r\n\r\n    { provide: LOCALE_ID, useValue: 'es' },  // El de España\r\n\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginUsuario } from '../models/login-usuario';\r\nimport { TokenService } from '../service/token.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n//Se utilizará para comprobar si estamos o no estamos logueados \r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  //variables que nos hacen falta\r\n\r\n  loginUsuario: LoginUsuario; // loginusuario, que es un objeto de la clase login-usuario.ts\r\n\r\n  cargandoLogin: boolean = false;\r\n\r\n  //dos campos, nombre y password, los valores que les pasa al loginusuario\r\n  email: string;\r\n  password: string;\r\n  errMsj: string;  // creada para usarla en el mensaje de error\r\n\r\n  constructor( // inyectamos el tokenservice, auth, router y toastr\r\n    private tokenService: TokenService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Método para hacer el login\r\n  onLogin(): void {\r\n\r\n    this.cargandoLogin = true;\r\n\r\n    //inicializamos el loginusuario y le pasamos el usuario y el password\r\n    this.loginUsuario = new LoginUsuario(this.email, this.password);\r\n\r\n    window.localStorage.UserEmail  = this.email;\r\n\r\n    //Vamos a enviarlo al authservice\r\n    this.authService.login(this.loginUsuario).subscribe( //loginusuario y nos suscribimos\r\n      data => { // hacemos un callback\r\n        this.tokenService.setToken(data.token);\r\n        console.log(data.user);\r\n        this.router.navigate(['/']);  // lo mandamos al index\r\n\r\n        this.cargandoLogin = false;     \r\n      },\r\n      err => { // en caso de error\r\n        this.errMsj = err.error.message;  // variable que habíamos creado para el error, saldrá el mensaje del backend\r\n        this.toastr.error(this.errMsj, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n\r\n        this.cargandoLogin = false;   \r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0cm8uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from '../service/token.service';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NuevoUsuario } from '../models/nuevo-usuario';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.component.html',\r\n  styleUrls: ['./registro.component.css']\r\n})\r\nexport class RegistroComponent implements OnInit {\r\n\r\n  //Similar al login, estas variables están copiadas\r\n\r\n  nuevoUsuario: NuevoUsuario;\r\n  name: string;\r\n  password: string;\r\n  password_confirmation: string;\r\n  email: string;\r\n\r\n  errMsj: string;\r\n\r\n  cargandoRegistro: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //Método para registrarse\r\n  onRegister(): void {\r\n\r\n    this.cargandoRegistro = true;\r\n\r\n    this.nuevoUsuario = new NuevoUsuario(this.name, this.password, this.password_confirmation, this.email);\r\n    this.authService.nuevo(this.nuevoUsuario).subscribe(\r\n      data => {\r\n        this.toastr.success('Cuenta creada', '', {\r\n          timeOut: 3000\r\n        });\r\n\r\n        this.router.navigate(['/login']); //va al login\r\n\r\n    this.cargandoRegistro = false;\r\n      },\r\n      err => { // si hay error\r\n        this.errMsj = err.error.mensaje;\r\n        this.toastr.error(this.errMsj, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n\r\n        this.cargandoRegistro = false;\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { TokenService } from './../service/token.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (this.tokenService.isLogged()) {\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdGuardService implements CanActivate { // Implementamos canactive\r\n\r\n  realRol: string; // variable que es el rol real que vamos a tener, va a ser user o admin\r\n\r\n  constructor(\r\n    private tokenService: TokenService, // inyectamos tokenservice\r\n    private router: Router // inyectamos router\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    const expectedRol = route.data.expectedRol;\r\n    // está el rol real (el que tengo) y el esperado, es decir, el que espero tener\r\n    // mi expectativa es ser administrador pero me quedo en un mero usuario\r\n\r\n    this.realRol = this.tokenService.isAdmin() ? 'admin' : 'user';\r\n\r\n    if (!this.tokenService.isLogged() || expectedRol.indexOf(this.realRol) < 0) {\r\n\r\n      this.router.navigate(['/']); // Va al index porque no puedo acceder\r\n      return false; // Devuelve false\r\n    }\r\n    return true; //En caso contrario, true\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luZGV4L2luZGV4LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from '../service/token.service';\r\nimport { DecimalPipe } from '@angular/common'; // para el decimal\r\nimport { parse } from 'querystring';\r\n\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  nombreUsuario: string; // vacío\r\n  userEmail: string;\r\n\r\n\r\n  constructor(private tokenService: TokenService, private DecimalPipe: DecimalPipe) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.nombreUsuario = this.tokenService.getUserName();\r\n\r\n    this.userEmail = window.localStorage.UserEmail;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdInterceptorService implements HttpInterceptor { // Implementa el interceptor\r\n\r\n  constructor(private tokenService: TokenService) { } // Inyectamos el tokenservice\r\n\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    let intReq = req; // Es req interceptado, por eso el int\r\n\r\n    const token = this.tokenService.getToken();\r\n\r\n    if (token != null) { // si no es nulo\r\n      intReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\r\n      // intreq va a ser igual a req, le pasamos la autorización, el bearer y el token\r\n    }\r\n    return next.handle(intReq);\r\n  }\r\n}\r\n\r\nexport const interceptorProvider = [{ provide: HTTP_INTERCEPTORS, useClass: ProdInterceptorService, multi: true }];\r\n// Lo exportamos, abro llaves, el interceptor, prodinterceptoservice y el multi va a ser true\r\n","export default \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  isLogged = false;  // variable de si está logueado\r\n\r\n  constructor(private tokenService: TokenService) { }  // le inyectamos un tokenservice\r\n\r\n  ngOnInit() {\r\n    this.isLogged = this.tokenService.isLogged();\r\n  }\r\n\r\n  onLogOut(): void { // Accedes a través del html, para el logout\r\n    this.tokenService.logOut();\r\n  }\r\n  \r\n}\r\n","export class LoginUsuario {\r\n\r\n    email: string;\r\n    password: string;\r\n\r\n    constructor(email: string, password: string) {\r\n        this.email = email;\r\n        this.password = password;\r\n    }\r\n}\r\n","export class NuevoUsuario {\r\n\r\n\r\n    name: string;\r\n    password: string;\r\n    password_confirmation: string;\r\n    email: string;\r\n\r\n\r\n\r\n    constructor(name: string, password: string, password_confirmation: string, email: string, ) {\r\n        this.name = name;\r\n        this.password = password;\r\n        this.password_confirmation = password_confirmation;\r\n        this.email = email;\r\n    }\r\n}\r\n","export class Producto {\r\n\r\n    id?: number;\r\n    name: string;\r\n    price: number;\r\n\r\n\r\n    constructor(name: string, price: number) {\r\n        this.name = name;\r\n        this.price = price; \r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(value: any, arg: any): any {\r\n    \r\n    if (arg === '' || arg.length < 2) return value; // tiene que introducir 2 letras mínimo\r\n    const resultPosts = [];\r\n    for (const post of value) {\r\n      if (post.name.toLowerCase().indexOf(arg.toLowerCase()) > -1) {\r\n        resultPosts.push(post);\r\n      };\r\n    };\r\n\r\n    return resultPosts;\r\n\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvZWRpdGFyLXBvc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Post } from '../models/post';\nimport { PostService } from '../service/post.service';\n\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-editar-post',\n  templateUrl: './editar-post.component.html',\n  styleUrls: ['./editar-post.component.css']\n})\nexport class EditarPostComponent implements OnInit {\n\n  // Si no recuerdo mal, para los modelos del form, es necesario iniciarlas.\n  name = '';\n  body = 'Escribe aquí el cuerpo del artículo';\n  post: Post = null;\n\n  public previsualizacion: string;\n  portada: File = null;\n\n\n  constructor(    private postService: PostService,\n    private activatedRoute: ActivatedRoute,\n    private toastr: ToastrService, private router: Router, private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n\n    const id = this.activatedRoute.snapshot.params.id;\n    this.postService.detail(id).subscribe(\n      data => {\n        this.post = data;\n\n \n        // this.cargando = false;\n\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000, \n        });\n        this.router.navigate(['/']);\n      }\n    );\n\n  }\n\n  onUpdate(): void{\n\n    const id = this.activatedRoute.snapshot.params.id;\n\n    const fd = new FormData();\n    fd.append('id', id);\n    fd.append('name', this.post.name);\n    fd.append('body', this.post.body);\n    fd.append('image', this.portada);\n  //  fd.append('_method', 'PUT');\n\n    // console.log(fd.get('id'));\n\n    this.postService.update(fd).subscribe(\n      data => {\n        this.toastr.success('Artículo editado', '', {\n          timeOut: 2000, \n       \n        });\n        this.router.navigate(['/articulos']);\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000, \n        });\n\n      }\n    );\n  }\n\n\n   captura(event): any{\n\n           // console.log(event.target.files); // la img se encuentra dentro de target.files\n\n           const archivoCapturado = <File>event.target.files[0];\n           \n           this.extraerBase64(archivoCapturado).then((imagen: any) => {\n               this.previsualizacion = imagen.base; // en esta variable almacenamos la codificación de la imagen, base64\n               console.log(imagen);\n             });\n           \n    \n\n             this.portada = archivoCapturado;\n      //     this.archivos.push(archivoCapturado); // En el array creado, incluímos la imagen\n\n  }\n\n     \n  // // El evento que le pasamos, crea una función tipo file, la lee y nos devuelve el base64\n  extraerBase64 = async ($event: any) => new Promise((resolve, reject) => {\n    try {\n      const unsafeImg = window.URL.createObjectURL($event);\n      const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n      const reader = new FileReader();\n      reader.readAsDataURL($event);\n      reader.onload = () => {\n        resolve({\n          base: reader.result\n        });\n      };\n      reader.onerror = error => {\n        resolve({\n          base: null\n        });\n      };\n\n    } catch (e) {\n      return null;\n    }\n  });\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvZnVsbC1wb3N0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Post } from '../models/post';\nimport { PostService } from '../service/post.service';\n\n@Component({\n  selector: 'app-full-post',\n  templateUrl: './full-post.component.html',\n  styleUrls: ['./full-post.component.css']\n})\nexport class FullPostComponent implements OnInit {\n\n  post: Post = null;\n\n  // image: File = null;\n\n  constructor(    \n    private postService: PostService,\n    private activatedRoute: ActivatedRoute,\n    private toastr: ToastrService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n    const id = this.activatedRoute.snapshot.params.id;\n    this.postService.detail(id).subscribe(\n      data => {\n        this.post = data;\n\n        // this.cargando = false;\n\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000\n        });\n        this.volver();\n      });\n\n  }\n\n  // imagen(): void{\n  //   this.postService.image(16).subscribe(\n  //     dataimg => {\n  //       console.log('hola');\n  //       this.image = dataimg;\n\n  //     }, \n  //     err => {\n  //       this.toastr.error(err.error.mensaje, 'Error', {\n  //         timeOut: 3000\n  //       });\n  //     }\n  //   );\n  // }\n  \n  volver(): void {\n    this.router.navigate(['/articulos']);\n  }\n\n}\n","export default \"body{\\r\\n    background-color: #fefefe;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9saXN0YS1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7QUFDN0IiLCJmaWxlIjoic3JjL2FwcC9wb3N0L2xpc3RhLXBvc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlO1xyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Post } from '../models/post';\nimport { PostService } from '../service/post.service';\n\n@Component({\n  selector: 'app-lista-post',\n  templateUrl: './lista-post.component.html',\n  styleUrls: ['./lista-post.component.css']\n})\nexport class ListaPostComponent implements OnInit {\n\n  posts: Post[] = [];\n\n  constructor(private postService: PostService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n\n    this.cargarPosts();\n  }\n\n  cargarPosts() :void{\n\n    this.postService.lista().subscribe(\n      data =>{\n        this.posts = data; // lo carga en el Array que hemos creado, llamado posts\n      }, \n      err => {\n        console.log(err);\n      }\n    );\n\n  }\n\n  borrar(id: number){\n\n    this.postService.delete(id).subscribe(\n      data => {\n        this.toastr.success('Artículo eliminado', '', {\n          timeOut: 3000\n        });\n        this.cargarPosts();\n\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000\n        });\n      }\n    );\n\n\n  }\n\n}\n","export default \"ckeditor{\\r\\n    border-bottom: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9udWV2by1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9wb3N0L251ZXZvLXBvc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImNrZWRpdG9ye1xyXG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxufSJdfQ== */\";","import { PostService } from './../service/post.service';\nimport { Component, OnInit, NgModule, ViewChild } from '@angular/core';\nimport { post } from 'jquery';\nimport { Post } from '../models/post';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\nimport { CKEditorComponent } from 'ckeditor4-angular';\n\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport Base64UploadAdapter from '@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter';\n\n\n@Component({\n  selector: 'app-nuevo-post',\n  templateUrl: './nuevo-post.component.html',\n  styleUrls: ['./nuevo-post.component.css']\n})\nexport class NuevoPostComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  \n  name = '';\n  body = 'Escribe aquí el cuerpo del artículo';\n\n  public archivos: any = [];\n\n  public previsualizacion: string;\n\n  portada: File = null;\n\n    // config.uiColor = '#F7B42C';\n \n  \n  // editorData: '<p>Hello, world!</p>';\n\n\n\n\n  // ckeditorContent: string = 'probando';\n  @ViewChild(CKEditorComponent) ckEditor: CKEditorComponent;\n\n  ngAfterViewChecked(){\n    let editor = this.ckEditor.instance;\n    editor.config.height = '200';\n    editor.config.toolbarGroups = [\n      { name: 'document', groups: ['mode', 'document', 'doctools']}\n    ]\n  }\n\n  constructor(private postService: PostService, private toastr: ToastrService,\n    private router: Router, private sanitizer: DomSanitizer) {\n\n      console.log(this.name);\n      \n     }\n\n  ngOnInit() {\n\n\n  }\n\n  // onCreate(): void{\n\n  //   this.subirArchivo();\n\n  //   // const post = new Post(this.name, this.body, formularioDeDatos);\n  //   // this.postService.save(post).subscribe(\n  //   //   data => {\n  //   //     this.toastr.success('Artículo creado', '', {\n  //   //       timeOut: 3000\n  //   //     });\n  //   //     this.router.navigate(['/articulos']);\n  //   //   },\n  //   //   err => {\n  //   //     this.toastr.error(err.error.mensaje, 'Error', {\n  //   //       timeOut: 3000\n  //   //     });\n\n  //   //   }\n  //   // );\n  // }\n\n  // subirArchivo(): any {\n  //   try {\n  //   //  this.loading = true;\n  //     const formularioDeDatos = new FormData(); // Es un archivo que tiene datos binarios, necesitamos un formdata\n  //     this.archivos.forEach(archivo => {\n  //       formularioDeDatos.append('files', archivo)    // Nombre que la api o servicio nos pida\n  //       // ---------------------------------------CREO QUE DEBO INCLUIR archivo EN LA LLAMADA AL SERVICIO\n  //      console.log('función subir')\n  //       console.log(archivo);\n  //     })\n\n  //     const post = new Post(this.name, this.body, formularioDeDatos);\n  //     this.postService.save(post).subscribe(\n  //       data => {\n  //         this.toastr.success('Artículo creado', '', {\n  //           timeOut: 3000\n  //         });\n  //         this.router.navigate(['/articulos']);\n  //       },\n  //       err => {\n  //         this.toastr.error(err.error.mensaje, 'Error', {\n  //           timeOut: 3000\n  //         });\n  \n  //       }\n  //     );\n\n\n  //     //  formularioDeDatos.append('_id', 'MY_ID_123')\n  //   //   this.postService.save(post)\n  //   //     .subscribe(res => {\n  //   //  //     this.loading = false;\n  //   //       console.log('Respuesta del servidor', res);\n\n  //   //     }, () => {\n  //   //  //     this.loading = false;\n  //   //       alert('Error');\n  //   //     })\n  //   } catch (e) {\n  //  //   this.loading = false;\n  //     console.log('ERROR', e);\n\n  //   }\n  // }\n\n\n  // ckeditor(){\n\n  //     ClassicEditor\n  // .create( document.querySelector( '#ckeditor' ) )\n  // .catch( error => {\n  //     console.error( error );\n  // } );\n  // }\n\n  captura(event): any{\n\n           // console.log(event.target.files); // la img se encuentra dentro de target.files\n\n           const archivoCapturado = <File>event.target.files[0];\n           \n           this.extraerBase64(archivoCapturado).then((imagen: any) => {\n               this.previsualizacion = imagen.base; // en esta variable almacenamos la codificación de la imagen, base64\n               console.log(imagen);\n             });\n           \n       \n\n             this.portada = archivoCapturado;\n      //     this.archivos.push(archivoCapturado); // En el array creado, incluímos la imagen\n\n  }\n\n  crea(): void{\n\n    const fd = new FormData();\n    fd.append('name', this.name);\n    fd.append('body', this.body);\n    fd.append('image', this.portada);\n\n    this.postService.save(fd).subscribe(\n      data => {\n        this.toastr.success('Artículo creado', '', {\n          timeOut: 3000\n        });\n        this.router.navigate(['/articulos']);\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000\n        });\n\n      }\n    );\n    console.log('aquí estaría con el post mandado')\n  }\n\n  // capturarFile(event): any{\n\n  //       // console.log(event.target.files); // la img se encuentra dentro de target.files\n\n  //   const archivoCapturado = event.target.files[0];\n  //   this.extraerBase64(archivoCapturado).then((imagen: any) => {\n  //       this.previsualizacion = imagen.base; // en esta variable almacenamos la codificación de la imagen, base64\n  //       console.log(imagen);\n  //     });\n    \n\n  //   this.archivos.push(archivoCapturado); // En el array creado, incluímos la imagen\n\n  // }\n\n   \n  // // El evento que le pasamos, crea una función tipo file, la lee y nos devuelve el base64\n  extraerBase64 = async ($event: any) => new Promise((resolve, reject) => {\n    try {\n      const unsafeImg = window.URL.createObjectURL($event);\n      const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n      const reader = new FileReader();\n      reader.readAsDataURL($event);\n      reader.onload = () => {\n        resolve({\n          base: reader.result\n        });\n      };\n      reader.onerror = error => {\n        resolve({\n          base: null\n        });\n      };\n\n    } catch (e) {\n      return null;\n    }\n  });\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RvL2RldGFsbGUtcHJvZHVjdG8uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ProductoService } from '../service/producto.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Producto } from '../models/producto';\r\n\r\n@Component({\r\n  selector: 'app-detalle-producto',\r\n  templateUrl: './detalle-producto.component.html',\r\n  styleUrls: ['./detalle-producto.component.css']\r\n})\r\nexport class DetalleProductoComponent implements OnInit {\r\n\r\n  producto: Producto = null;\r\n\r\n  cargando: boolean = true;\r\n\r\n\r\n\r\n  constructor(\r\n    private productoService: ProductoService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this.productoService.detail(id).subscribe(\r\n      data => {\r\n        this.producto = data;\r\n\r\n        this.cargando = false;\r\n\r\n\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n        this.volver();\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  volver(): void {\r\n    this.router.navigate(['/lista']);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RvL2VkaXRhci1wcm9kdWN0by5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Producto } from '../models/producto';\r\nimport { ProductoService } from '../service/producto.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-editar-producto',\r\n  templateUrl: './editar-producto.component.html',\r\n  styleUrls: ['./editar-producto.component.css']\r\n})\r\nexport class EditarProductoComponent implements OnInit {\r\n\r\n  producto: Producto = null;\r\n\r\n  cargandoeditar: boolean = true;\r\n\r\n  constructor(\r\n    private productoService: ProductoService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  //Para ver los detalles \r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this.productoService.detail(id).subscribe(\r\n      data => {\r\n        this.producto = data;\r\n\r\n        this.cargandoeditar = false;\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n        this.router.navigate(['/']);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Para actualizar la información\r\n  onUpdate(): void {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this.productoService.update(id, this.producto).subscribe(\r\n      data => {\r\n        this.toastr.success('Producto actualizado', '', {\r\n          timeOut: 3000\r\n        });\r\n        this.router.navigate(['/lista']);\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RvL2xpc3RhLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Producto } from '../models/producto';\r\nimport { ProductoService } from '../service/producto.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TokenService } from '../service/token.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { IndexComponent } from '../index/index.component';\r\nimport { Sinid } from '../models/sinid';\r\n\r\nimport { DecimalPipe } from '@angular/common'; // para decimal pipe\r\n\r\n@Component({\r\n  selector: 'app-lista-producto',\r\n  templateUrl: './lista-producto.component.html',\r\n  styleUrls: ['./lista-producto.component.css']\r\n})\r\nexport class ListaProductoComponent implements OnInit {\r\n\r\n  productos: Producto[] = [];\r\n  productosCartera: Producto[] = [];\r\n\r\n  cargando: boolean = true;\r\n\r\n  duplicado: Producto[] = [];\r\n\r\n  listaAdmin: Producto[] = [];\r\n\r\n  isAdmin = false;\r\n\r\n  //Para cargar usuario\r\n  isLogged = false;\r\n  nombreUsuario: string = '';\r\n\r\n  idcartera: string = 'juan';\r\n\r\n  filterPost = '';\r\n\r\n  constructor(\r\n\r\n    private productoService: ProductoService,\r\n    private toastr: ToastrService,\r\n    private tokenService: TokenService,\r\n    private router: Router,\r\n    private DecimalPipe: DecimalPipe\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.cargarProductos(); // Carga los productos\r\n\r\n\r\n    this.isAdmin = this.tokenService.isAdmin();\r\n\r\n  }\r\n\r\n  // SistemaEuropeo(SistemaAmericano :number){ // Lo modifico\r\n  //   let TerConComa = this.DecimalPipe.transform(SistemaAmericano, \"1.2-2\", 'es')\r\n  //   return TerConComa;\r\n  // }\r\n\r\n  cargarProductos(): void {\r\n\r\n\r\n\r\n    this.productoService.lista().subscribe(\r\n      data => {\r\n        this.productos = data; // lo carga en el Array que hemos creado, llamado productos\r\n\r\n        this.cargando = false;\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  borrar(id: number) {\r\n    this.productoService.delete(id).subscribe(\r\n      data => {\r\n        this.toastr.success('Producto eliminado', '', {\r\n          timeOut: 3000\r\n        });\r\n        this.cargarProductos();\r\n\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RvL251ZXZvLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ProductoService } from '../service/producto.service';\r\nimport { Producto } from '../models/producto';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nuevo-producto',\r\n  templateUrl: './nuevo-producto.component.html',\r\n  styleUrls: ['./nuevo-producto.component.css']\r\n})\r\nexport class NuevoProductoComponent implements OnInit {\r\n\r\n  name = '';\r\n  price: number = null;\r\n\r\n  constructor(\r\n    private productoService: ProductoService,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) { \r\n\r\n    // Popover que uso para informar al usuario del lugar donde se encuentra el ID de los vídeos de Youtube\r\n    $(document).ready(function () {\r\n      (<any>$('[data-toggle=\"popover\"]')).popover({\r\n        placement: 'top',\r\n        trigger: 'hover'\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //Crear uno nuevo\r\n  onCreate(): void {\r\n\r\n    const producto = new Producto(this.name, this.price);\r\n    this.productoService.save(producto).subscribe(\r\n      data => {\r\n        this.toastr.success('Producto creado', '', {\r\n          timeOut: 3000\r\n        });\r\n        this.router.navigate(['/lista']);\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NuevoUsuario } from '../models/nuevo-usuario';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginUsuario } from '../models/login-usuario';\r\nimport { JwtDTO } from '../models/jwt-dto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  authURL = 'http://127.0.0.1/api/';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public nuevo(nuevoUsuario: NuevoUsuario): Observable<any> {\r\n    return this.httpClient.post<any>(this.authURL + 'register', nuevoUsuario);\r\n  }\r\n\r\n  public login(loginUsuario: LoginUsuario): Observable<JwtDTO> {\r\n    return this.httpClient.post<JwtDTO>(this.authURL + 'login', loginUsuario);\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Post } from '../models/post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private httpClient: HttpClient) { }\n\n    postURL =  'http://127.0.0.1/api/posts';\n\n    params: HttpParams = new HttpParams().set(\"_method\",\"PUT\"); //Create new HttpParams\n\n\n    public lista(): Observable<Post[]>{\n\n      return this.httpClient.get<Post[]>(this.postURL);\n\n    }\n\n    public image(id: number): Observable<any>{\n\n      return this.httpClient.get<any>(this.postURL + `/${id}/image`);\n    }\n    \n    // public save(post: Post): Observable<any>{\n\n    //   return this.httpClient.post<any>(this.postURL, post);\n\n    // }\n\n    public save(post: FormData): Observable<any>{\n\n      return this.httpClient.post<any>(this.postURL, post);\n    }\n\n    // public save(post: Post, image: string): Observable<any>{\n\n    //   return this.httpClient.post<any>(this.postURL, post);\n\n    // }\n    public detail(id: number): Observable<Post>{\n      return this.httpClient.get<Post>(this.postURL + `/${id}`);\n    }\n\n    // public update(id: number, post: Post): Observable<any>{\n    //   return this.httpClient.put<any>(this.postURL + `/${id}`, post);\n    // }\n\n    public update(post: FormData): Observable<any>{\n      return this.httpClient.post<any>(this.postURL + `/` + post.get(`id`)+ '?_method=PUT', post);  \n    }\n\n    public delete(id: number): Observable<any>{\n      return this.httpClient.delete<any>(this.postURL + `/${id}`);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Producto } from '../models/producto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductoService {\r\n\r\n  productoURL = 'http://127.0.0.1/api/products';\r\n  \r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public lista(): Observable<Producto[]> {\r\n    return this.httpClient.get<Producto[]>(this.productoURL);\r\n  }\r\n\r\n  public detail(id: number): Observable<Producto> {\r\n    return this.httpClient.get<Producto>(this.productoURL + `/${id}`);\r\n  }\r\n\r\n\r\n  public save(producto: Producto): Observable<any> {\r\n    return this.httpClient.post<any>(this.productoURL, producto);\r\n  }\r\n\r\n\r\n  public update(id: number, producto: Producto): Observable<any> {\r\n    return this.httpClient.put<any>(this.productoURL + `/${id}`, producto);\r\n  }\r\n\r\n  public delete(id: number): Observable<any> {\r\n    return this.httpClient.delete<any>(this.productoURL + `/${id}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nconst TOKEN_KEY = 'AuthToken';  // de clave\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  //Creamos un array con los roles\r\n\r\n  roles: Array<string> = [];\r\n\r\n  constructor(\r\n    private router: Router\r\n\r\n  ) { }\r\n\r\n  //getter y setter\r\n\r\n  public setToken(token: string): void {\r\n    window.localStorage.removeItem(TOKEN_KEY);\r\n    window.localStorage.setItem(TOKEN_KEY, token); // token key y el token que le estamos pasando como parámetro\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public isLogged(): boolean {\r\n    if (this.getToken()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  public getUserName(): string {\r\n    if (!this.isLogged()) {\r\n      return null;\r\n    }\r\n    // el token tiene un aspecto similar a este: dijsdnfdjinf.fasidjnffi.fisjdfnsdif \r\n    // se compone de: header, payload y firma\r\n    // ahora nos interesa el payload\r\n    // Para sacarlo, lo primero que hacemos es convertir la cadena en un array de cadenas\r\n\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    //split convierte un array a partir de un caracter, le ponemos posición 1 para acceder al payload\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded); // parseamos a JSON\r\n    const username = values.sub;\r\n    return username;\r\n  }\r\n\r\n  public isAdmin(): boolean {\r\n    if (!this.isLogged()) {\r\n      return false;\r\n    }\r\n    // el token tiene un aspecto similar a este: dijsdnfdjinf.fasidjnffi.fisjdfnsdif \r\n    // se compone de: header, payload y firma\r\n    // ahora nos interesa el payload\r\n    // lo primero que hacemos es convertir la cadena en un array de cadenas\r\n\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    //split convierte un array a partir de un caracter, le ponemos posición 1 para acceder al payload\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded); // parseamos a JSON\r\n//    const roles = values.roles;\r\n\r\n    return true;\r\n  }\r\n\r\n  //Para cerrar sesión\r\n  public logOut(): void {\r\n    window.localStorage.clear(); // Va a limpiar todo lo que tengamos en el sesionstorage\r\n    this.router.navigate(['/login']); // Vamos a inicio\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  productoURL: 'http://localhost:8080/producto/',\r\n  authURL: 'http://localhost:8080/auth/'\r\n};\r\n//Lo ponemos aquí porque de momento estamos en desarrollo\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}