{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/auth/login.component.html","./src/app/auth/registro.component.html","./src/app/index/index.component.html","./src/app/menu/menu.component.html","./src/app/post/editar-post.component.html","./src/app/post/full-post.component.html","./src/app/post/lista-post.component.html","./src/app/post/nuevo-post.component.html","./src/app/producto/detalle-producto.component.html","./src/app/producto/editar-producto.component.html","./src/app/producto/lista-producto.component.html","./src/app/producto/nuevo-producto.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/login.component.css","./src/app/auth/login.component.ts","./src/app/auth/registro.component.css","./src/app/auth/registro.component.ts","./src/app/guards/login.guard.ts","./src/app/guards/prod-guard.service.ts","./src/app/index/index.component.css","./src/app/index/index.component.ts","./src/app/interceptors/prod-interceptor.service.ts","./src/app/menu/menu.component.css","./src/app/menu/menu.component.ts","./src/app/models/login-usuario.ts","./src/app/models/nuevo-usuario.ts","./src/app/models/producto.ts","./src/app/pipes/filter.pipe.ts","./src/app/post/editar-post.component.css","./src/app/post/editar-post.component.ts","./src/app/post/full-post.component.css","./src/app/post/full-post.component.ts","./src/app/post/lista-post.component.css","./src/app/post/lista-post.component.ts","./src/app/post/nuevo-post.component.css","./src/app/post/nuevo-post.component.ts","./src/app/producto/detalle-producto.component.css","./src/app/producto/detalle-producto.component.ts","./src/app/producto/editar-producto.component.css","./src/app/producto/editar-producto.component.ts","./src/app/producto/lista-producto.component.css","./src/app/producto/lista-producto.component.ts","./src/app/producto/nuevo-producto.component.css","./src/app/producto/nuevo-producto.component.ts","./src/app/service/auth.service.ts","./src/app/service/post.service.ts","./src/app/service/producto.service.ts","./src/app/service/token.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- <app-menu></app-menu> No lo ponemos aquí porque queremos que se recargue con botones distintos dependiendo de si está logueado o no -->\\r\\n\\r\\n<router-outlet></router-outlet>\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n    <div class=\\\"container mb-5 text-center h1 mt-5\\\">\\r\\n        Inicia sesión o crea una cuenta con tu correo \\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container mb-5 d-flex justify-content-center\\\">\\r\\n        <div class=\\\"card col-lg-5 mt-5 mx-0 px-0\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <ul class=\\\"nav nav-tabs justify-content-center\\\">\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link active\\\" routerLink=\\\"/login\\\">Iniciar Sesión</a>\\r\\n                        <!-- va a login, tiene el active porque está en esta pestaña,\\r\\n                    en el registro tendrá el active en la etiqueta de registro -->\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/registro\\\">Crear Cuenta</a> <!-- va a registro -->\\r\\n                    </li>\\r\\n\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin()\\\" novalidate>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"email\\\">Email</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\"\\r\\n                            [(ngModel)]=\\\"email\\\" required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"password\\\">Contraseña</label>\\r\\n                        <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"\\r\\n                            required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n\\r\\n                        <div *ngIf=\\\"cargandoLogin==true\\\" class=\\\"text-center my-5\\\"> \\r\\n                            <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div> \\r\\n                        </div>\\r\\n\\r\\n                        <button class=\\\"btn boton shadow btn-block\\\" [disabled]=\\\"!f.valid\\\">\\r\\n                            <i class=\\\"fas fa-sign-in-alt\\\"></i> Iniciar Sesión</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\"container mb-5 text-center h1 mt-5\\\">\\r\\n  Inicia sesión o crea una cuenta con tu correo \\r\\n</div>\\r\\n\\r\\n  <div class=\\\"container mb-5 d-flex justify-content-center\\\">\\r\\n    <div class=\\\"card col-lg-5 mt-5 mx-0 px-0\\\">\\r\\n      <div class=\\\"card-header \\\">\\r\\n        <ul class=\\\"nav nav-tabs justify-content-center\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Iniciar Sesión</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" routerLink=\\\"/registro\\\">Crear Cuenta</a>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <!-- formulario de login -->\\r\\n        <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onRegister()\\\" novalidate>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Nombre</label>\\r\\n            <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\" required>\\r\\n            <!-- ngModel, misma variable que en login.c.ts.\\r\\n                  Es required -->\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Contraseña</label>\\r\\n            <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password_confirmation\\\">Confirmación</label>\\r\\n            <input type=\\\"password\\\" name=\\\"password_confirmation\\\" id=\\\"password_confirmation\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password_confirmation\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">Correo Electrónico</label>\\r\\n            <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <div *ngIf=\\\"cargandoRegistro==true\\\" class=\\\"text-center my-5\\\"> \\r\\n              <div class=\\\"spinner-border\\\" role=\\\"status\\\">                \\r\\n              </div> \\r\\n            </div>\\r\\n            <button class=\\\"btn boton shadow btn-block\\\" [disabled]=\\\"!f.valid\\\">\\r\\n              <i class=\\\"fas fa-sign-in-alt\\\"></i> Crear Cuenta</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"container my-5 col-11 col-sm-7 justify-content-center bg-white border rounded shadow-lg py-5 px-md-5\\\">\\r\\n        <div *ngIf=\\\"nombreUsuario\\\" class=\\\"m-lg-5\\\">\\r\\n\\r\\n            <div class=\\\"h5 mt-4\\\">Cuenta iniciada con el email {{userEmail}}.  </div>\\r\\n            <div class=\\\"h5 mt-4\\\">Puede acceder a la selección de productos. </div>\\r\\n\\r\\n            <div class=\\\"mt-5 d-flex justify-content-center\\\">\\r\\n                <button class=\\\"btn boton btn-block col-lg-4 shadow \\\" routerLink=\\\"/lista\\\">\\r\\n                    Ir a la lista\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"!nombreUsuario\\\" class=\\\"m-lg-5\\\">\\r\\n            <p class=\\\"h1\\\">Acceda a la lista de productos</p>\\r\\n            <p class=\\\"h5 mt-5 font-weight-normal\\\">\\r\\n                Esta lista contiene productos con un alto volumen de ventas.\\r\\n            </p>\\r\\n            <div class=\\\"d-flex justify-content-lg-center\\\">\\r\\n\\r\\n                <div class=\\\"mt-4 d-flex flex-column flex-lg-row mb-1 col-lg-10\\\">\\r\\n                    <div class=\\\"col d-flex justify-content-center mt-3\\\">\\r\\n                        <button class=\\\"btn btn-outline-dark btn-block\\\" routerLink=\\\"/login\\\">\\r\\n                            Iniciar Sesión\\r\\n                        </button>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col d-flex justify-content-center mt-3\\\">\\r\\n                        <button class=\\\"btn boton shadow btn-block\\\" routerLink=\\\"/registro\\\">\\r\\n                            Registrarse\\r\\n                        </button>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\";","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light  bg-white mx-lg-5\\\">\\r\\n\\r\\n  <a class=\\\"navbar-brand my-sm-2\\\" href=\\\"#\\\"> Lista de productos </a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\"\\r\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse \\\" id=\\\"navbarNav\\\">\\r\\n    <ul class=\\\"navbar-nav ml-auto text-center my-4 my-sm-2\\\">\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"p-3 menulink\\\" routerLink=\\\"/lista\\\">\\r\\n          <div class=\\\"btn menulink my-2\\\">Productos</div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"p-3 menulink\\\" routerLink=\\\"/articulos\\\">\\r\\n          <div class=\\\"btn menulink my-2\\\">Artículos</div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!isLogged\\\">\\r\\n        <a class=\\\" p-3\\\" routerLink=\\\"/login\\\">\\r\\n          <div class=\\\"btn menulink my-2\\\">Iniciar Sesión</div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!isLogged\\\">\\r\\n        <a class=\\\"p-3 menulink\\\" routerLink=\\\"/registro\\\">\\r\\n          <div class=\\\"btn  boton shadow my-2\\\">Registrarse </div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"isLogged\\\" (click)=\\\"onLogOut()\\\">\\r\\n        <a class=\\\"p-3 menulink\\\">\\r\\n          <div class=\\\"btn boton shadow my-2\\\"><i class=\\\"fas fa-power-off\\\"></i> Cerrar Sesión</div>\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n</nav>\";","export default \"<app-menu></app-menu>\\n\\n<div class=\\\"py-5\\\">\\n\\n    <div class=\\\" container col-lg-7 bg-white  my-5 py-4 px-3 \\\">\\n        <form (ngSubmit)=\\\"onUpdate()\\\" novalidate #f=\\\"ngForm\\\">\\n\\n            <div class=\\\"form-group\\\">\\n                <!-- capturarFile($event) -->\\n                \\n                <input (change)=\\\"captura($event)\\\" type=\\\"file\\\">  \\n                <!-- Change detecta cuando el input tiene un cambio.\\n                Le ponemos la función capturar con el parámetro evento -->\\n            </div>  \\n\\n            <div *ngIf=\\\"previsualizacion\\\">\\n                <img width=\\\"500px\\\" [src]=\\\"previsualizacion\\\" alt=\\\"\\\">\\n            </div>\\n            \\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"post.name\\\" required placeholder=\\\"Escribe aquí el nombre\\\">\\n            </div>\\n\\n            <div class=\\\"form-group mt-5\\\">\\n                <ckeditor  data=\\\"<p>Hello, world!</p><br>hello\\\" type=\\\"inline\\\" [config]=\\\"{ extraPlugins: 'divarea' }\\\" [(ngModel)]=\\\"post.body\\\" name=\\\"body\\\" ></ckeditor>\\n            </div> \\n        \\n            <div class=\\\"d-flex justify-content-around mt-5\\\">\\n            <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/articulos\\\"> Volver </a>\\n            <button class=\\\"btn boton btn-block\\\" [disabled]=\\\"!f.valid\\\">\\n                Guardar\\n            </button>\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\";","export default \"<app-menu></app-menu>\\n\\n\\n\\n  <!-- <div *ngIf=\\\"cargando==true\\\" class=\\\"text-center my-5\\\"> \\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div> \\n </div> -->\\n\\n<div *ngIf=\\\"post\\\" class=\\\"py-5\\\">\\n  <div class=\\\"container col-lg-7 bg-white  my-5 py-4 px-3\\\">\\n    <!-- [ngStyle]=\\\"{ width : 200px; }\\\" -->\\n\\n    <div class=\\\"display-4 font-weight-bold mb-5\\\">{{post.name}}</div> \\n</div>\\n\\n<div class=\\\"mx-2\\\">\\n      <img [src]=\\\"'http://127.0.0.1/storage/' + post.image\\\" class=\\\"img-fluid corner mx-auto d-block mb-5\\\" >\\n</div>\\n\\n    <br>\\n\\n    <div class=\\\"container col-lg-7 bg-white  my-5 py-4 px-3\\\">\\n      <div [innerHTML]=\\\"post.body\\\"></div>\\n    </div>\\n  \\n</div>\";","export default \"<app-menu></app-menu>\\n\\n<div class=\\\"mb-5\\\">\\n  <br>\\n</div>\\n\\n\\n<p class=\\\"h3 text-center\\\"> Artículos </p>\\n  <br>\\n\\n<p class=\\\"text-center\\\">\\n   <button class=\\\"btn btn-primary mb-5\\\" routerLink=\\\"nuevo\\\"> Crear artículo </button>\\n</p> \\n\\n<!-- <div class=\\\"container d-flex justify-content-center\\\"> -->\\n\\n  <div class=\\\"container d-flex justify-content-around flex-wrap\\\"> \\n    <div class=\\\"col-lg-5\\\" *ngFor=\\\"let post of posts\\\">\\n\\n    <!-- <a routerLink=\\\"/{{post.id}}\\\"> -->\\n\\n      <div class=\\\"card mb-5 cardstyle mx-0 my-0 px-4 pt-4 pb-0 corner shadow\\\">\\n\\n          <!-- {{post.image}}     intento con d-inline, miraré otro -->\\n          <table class=\\\"table table-borderless d-inline\\\">\\n            <tr>\\n              <!-- <td> <img src=\\\"'http://localhost:4200/' + post.image\\\"> </td> -->\\n              <a routerLink=\\\"/{{post.id}}\\\">\\n                <img [src]=\\\"'http://127.0.0.1/storage/' + post.image\\\" class=\\\"img-fluid cornerlista mx-auto d-block\\\" >\\n              </a>\\n\\n            </tr>\\n            <tr>\\n              <td>\\n                <a class=\\\"h2\\\" routerLink=\\\"/{{post.id}}\\\">{{post.name}}</a>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                Probando. Este sería el header del artículo. Abajo tengo comentado la forma de mostrarlo bien.\\n                <!-- <div [innerHTML]=\\\"post.body\\\"></div> -->\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <button class=\\\"btn btn-dark btn-block corner mt-3\\\" routerLink=\\\"/{{post.id}}\\\">Ver artículo </button>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <button class=\\\"btn btn-outline-dark btn-sm corner\\\" routerLink=\\\"editar/{{post.id}}\\\">Editar </button>\\n                &nbsp;\\n                <button class=\\\"btn btn-outline-dark btn-sm corner\\\" (click)=\\\"borrar(post.id)\\\">Borrar </button>\\n              </td>  \\n            </tr>\\n\\n              <!-- Ponemos div innerhtml para que renderice el html -->\\n              <!-- {{post.body}} -->\\n          </table>\\n        \\n      </div>\\n    <!-- </a> -->\\n    </div>\\n  </div>\\n<!-- \\n</div> -->\";","export default \"<app-menu></app-menu>\\n\\n    <!-- ckeditor -->\\n    <!-- <script src=\\\"https://cdn.ckeditor.com/ckeditor5/29.1.0/classic/ckeditor.js\\\"></script> -->\\n\\n<!-- <div id=\\\"editor\\\">\\n    <p>This is some sample content.</p>\\n</div> -->\\n\\n\\n\\n<!-- <script>\\n    ClassicEditor\\n        .create( document.querySelector( '#editor' ) )\\n        .catch( error => {\\n            console.error( error );\\n        } );\\n</script> -->\\n\\n\\n<div class=\\\"py-5\\\">\\n    <!-- col-lg-4 -->\\n    <!-- border rounded shadow-->\\n    <div class=\\\" container col-lg-7 bg-white  my-5 py-4 px-3 \\\">\\n        <!-- onCreate() -->\\n        <form (ngSubmit)=\\\"crea()\\\" novalidate #f=\\\"ngForm\\\">\\n\\n\\n            <div class=\\\"form-group\\\">\\n                <!-- capturarFile($event) -->\\n                \\n                <input (change)=\\\"captura($event)\\\" type=\\\"file\\\">  \\n                <!-- Change detecta cuando el input tiene un cambio.\\n                Le ponemos la función capturar con el parámetro evento -->\\n            </div>  \\n\\n            <div *ngIf=\\\"previsualizacion\\\">\\n                <img width=\\\"500px\\\" [src]=\\\"previsualizacion\\\" alt=\\\"\\\">\\n            </div>\\n            \\n\\n            <div class=\\\"form-group\\\">\\n                <!-- <label for=\\\"name\\\">Nombre</label> -->\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required placeholder=\\\"Escribe aquí el nombre\\\">\\n            </div>\\n\\n            <div class=\\\"form-group mt-5\\\">\\n                \\n                <!-- <label class=\\\"my-4\\\" for=\\\"body\\\">Cuerpo del artículo</label> -->\\n                <!-- class=\\\"form-control\\\" -->\\n\\n                <!-- ESTE ES EL ANTERIOR, QUE ESTABA BIEN -->\\n                <!-- <ckeditor  data=\\\"<p>Hello, world!</p><br>hello\\\" type=\\\"inline\\\" [config]=\\\"{ extraPlugins: 'divarea' }\\\" [(ngModel)]=\\\"body\\\" name=\\\"body\\\" ></ckeditor> -->\\n                <!-- ESTE ES EL ANTERIOR, QUE ESTABA BIEN -->\\n\\n                <ckeditor [editor]=\\\"Editor\\\" data=\\\"<p>Hello, world!</p>\\\" [(ngModel)]=\\\"body\\\" name=\\\"body\\\"></ckeditor>\\n\\n\\n            </div> \\n\\n            <!-- <div class=\\\"form-group\\\">\\n                <label for=\\\"body\\\">Cuerpo del artículo</label>\\n\\n\\n\\n                <input type=\\\"textarea\\\" class=\\\"form-control\\\" id=\\\"body\\\" name=\\\"body\\\" [(ngModel)]=\\\"body\\\" required>\\n            </div>             -->\\n        \\n            <div class=\\\"d-flex justify-content-around mt-5\\\">\\n            <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/articulos\\\"> Volver </a>\\n            <button class=\\\"btn boton btn-block\\\" [disabled]=\\\"!f.valid\\\">\\n                <!-- <i class=\\\"fas fa-plus-circle\\\"></i>  -->\\n                Crear\\n            </button>\\n            </div>\\n\\n\\n\\n\\n        </form>\\n\\n\\n    </div>\\n</div>\\n\\n\\n<!-- \\n<button class=\\\"btn btn-danger\\\" (click)=\\\"imprime()\\\">Imprime</button>\\n\\n<ckeditor data=\\\"<p>Hello, world!</p><br>hello\\\" type=\\\"inline\\\"  [(ngModel)]=\\\"body\\\" name=\\\"body\\\" readOnly=\\\"true\\\" ></ckeditor>\\n -->\\n\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\"container  text-center mt-5 \\\">\\r\\n  <span class=\\\"\\\" id=\\\"\\\"></span>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"cargando==true\\\" class=\\\"text-center my-5\\\"> \\r\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div> \\r\\n </div>\\r\\n\\r\\n<div *ngIf=\\\"producto\\\" class=\\\"py-5\\\">\\r\\n  <div class=\\\"container my-4 py-4 px-md-3\\\">\\r\\n    <div class=\\\"card shadow\\\">\\r\\n      <ul class=\\\"list-group list-group-flush\\\">\\r\\n        <li class=\\\"list-group-item\\\"><b>Name: </b>{{producto.name}}</li>\\r\\n        <li class=\\\"list-group-item\\\"><b>Price: </b>{{producto.price}}</li>\\r\\n      </ul>\\r\\n      \\r\\n      <div class=\\\"card-footer bg-white\\\">\\r\\n        <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/lista\\\"> Volver </a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n    <div *ngIf=\\\"cargandoeditar==true\\\" class=\\\"text-center my-5\\\"> \\r\\n        <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div> \\r\\n     </div>\\r\\n     \\r\\n<div *ngIf=\\\"producto\\\" class=\\\"py-5\\\">\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"container col-lg-4 mt-5 bg-white border rounded my-5 py-4 px-3 shadow\\\">\\r\\n        <form (ngSubmit)=\\\"onUpdate()\\\" novalidate #f=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"nombre\\\">Nombre</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"producto.name\\\"\\r\\n                    required>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"price\\\">Precio</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" [(ngModel)]=\\\"producto.price\\\" required>\\r\\n            </div>\\r\\n \\r\\n            <button class=\\\"btn boton btn-block\\\" [disabled]=\\\"!f.valid\\\">\\r\\n                <i class=\\\"fas fa-pencil-alt\\\"></i> Actualizar</button>\\r\\n            <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/lista\\\"> Volver </a>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"my-3\\\">\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\"mb-5\\\">\\r\\n  <br>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n\\r\\n  <span class=\\\"h1 font-weight-bold\\\">Productos </span>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group mt-5\\\">\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"filterPost\\\" placeholder=\\\"Buscar...\\\" [(ngModel)]=\\\"filterPost\\\">\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"mt-5 mb-0 table-responsive\\\">\\r\\n    <table class=\\\"table table-striped table-hover border\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Nombre</th>\\r\\n\\r\\n          <th scope=\\\"col\\\">Precio</th>\\r\\n          <th scope=\\\"col\\\">Ver</th>\\r\\n\\r\\n\\r\\n          <th scope=\\\"col\\\">Editar</th>\\r\\n\\r\\n          <th scope=\\\"col\\\">Borrar</th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n\\r\\n        <tr *ngFor=\\\"let producto of productos | filter:filterPost\\\">\\r\\n          <td class=\\\"align-middle\\\">{{producto.name}} </td>\\r\\n          <td class=\\\"align-middle\\\"> {{producto.price}}</td>\\r\\n          <td class=\\\"align-middle\\\"><button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/detalle/{{producto.id}}\\\"><i\\r\\n                class=\\\"far fa-eye\\\"></i> <!-- Ver --> </button></td>\\r\\n\\r\\n\\r\\n          <td class=\\\"align-middle\\\"><button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/editar/{{producto.id}}\\\"><i\\r\\n                class=\\\"far fa-edit\\\"></i> </button></td>\\r\\n          <td class=\\\"align-middle\\\"><button class=\\\"btn btn-outline-dark\\\" (click)=\\\"borrar(producto.id)\\\"><i\\r\\n                class=\\\"far fa-trash-alt\\\"></i> </button></td>\\r\\n        </tr>\\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <div *ngIf=\\\"cargando==true\\\" class=\\\"text-center my-5\\\">\\r\\n      <div class=\\\"spinner-border\\\" role=\\\"status\\\"></div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mt-4 mb-5\\\">\\r\\n    <button class=\\\"btn boton shadow btn-lg\\\" routerLink=\\\"/nuevo\\\">\\r\\n      <i class=\\\"fas fa-plus-circle\\\"></i> Nuevo Producto</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\";","export default \"<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\" py-5\\\">\\r\\n    <div class=\\\"col-lg-4 container bg-white border rounded my-5 py-4 px-3 shadow\\\">\\r\\n        <form (ngSubmit)=\\\"onCreate()\\\" novalidate #f=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Nombre</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"price\\\">Precio</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" required>\\r\\n            </div>            \\r\\n        \\r\\n\\r\\n            <button class=\\\"btn boton btn-block\\\" [disabled]=\\\"!f.valid\\\">\\r\\n                <i class=\\\"fas fa-plus-circle\\\"></i> Crear</button>\\r\\n            <a class=\\\"linkmin btn btn-block\\\" routerLink=\\\"/lista\\\"> Volver </a>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListaProductoComponent } from './producto/lista-producto.component';\r\nimport { DetalleProductoComponent } from './producto/detalle-producto.component';\r\nimport { NuevoProductoComponent } from './producto/nuevo-producto.component';\r\nimport { EditarProductoComponent } from './producto/editar-producto.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { RegistroComponent } from './auth/registro.component';\r\nimport { ProdGuardService } from './guards/prod-guard.service';\r\n\r\n\r\n\r\nimport { LoginGuard } from './guards/login.guard';\r\nimport { ListaPostComponent } from './post/lista-post.component';\r\nimport { NuevoPostComponent } from './post/nuevo-post.component';\r\nimport { FullPostComponent } from './post/full-post.component';\r\nimport { EditarPostComponent } from './post/editar-post.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: IndexComponent },\r\n\r\n  { path: 'login', component: LoginComponent, canActivate: [LoginGuard] },\r\n  { path: 'registro', component: RegistroComponent, canActivate: [LoginGuard] },\r\n\r\n  { path: 'lista', component: ListaProductoComponent, canActivate: [ProdGuardService], data: { expectedRol: ['admin', 'user'] } },\r\n  { path: 'detalle/:id', component: DetalleProductoComponent, canActivate: [ProdGuardService], data: { expectedRol: ['admin', 'user'] } },\r\n\r\n  { path: 'nuevo', component: NuevoProductoComponent, canActivate: [ProdGuardService], data: { expectedRol: ['admin', 'user'] } },\r\n  { path: 'editar/:id', component: EditarProductoComponent, canActivate: [ProdGuardService], data: { expectedRol: ['admin', 'user'] } },\r\n\r\n  { path: 'articulos', component: ListaPostComponent },\r\n  { path: 'articulos/nuevo', component: NuevoPostComponent },\r\n  { path: ':id', component: FullPostComponent },\r\n  { path: 'articulos/editar/:id', component: EditarPostComponent },\r\n\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'productos';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ListaProductoComponent } from './producto/lista-producto.component';\r\nimport { DetalleProductoComponent } from './producto/detalle-producto.component';\r\nimport { NuevoProductoComponent } from './producto/nuevo-producto.component';\r\nimport { EditarProductoComponent } from './producto/editar-producto.component';\r\nimport { interceptorProvider } from './interceptors/prod-interceptor.service';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { RegistroComponent } from './auth/registro.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { IndexComponent } from './index/index.component';\r\n\r\nimport { DecimalPipe, registerLocaleData } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\nimport { ListaPostComponent } from './post/lista-post.component';\r\nimport { NuevoPostComponent } from './post/nuevo-post.component';\r\nimport { EditarPostComponent } from './post/editar-post.component';\r\n//import { CKEditorModule } from 'ckeditor4-angular';\r\nimport { FullPostComponent } from './post/full-post.component';\r\nimport { bottom, right } from '@popperjs/core';\r\n\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\n\r\n\r\n\r\n\r\n// import * as bootstrap from \"bootstrap\";\r\n// import * as $ from \"jquery\";\r\n\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListaProductoComponent,\r\n    DetalleProductoComponent,\r\n    NuevoProductoComponent,\r\n    EditarProductoComponent,\r\n    LoginComponent,\r\n    RegistroComponent,\r\n    MenuComponent,\r\n    IndexComponent,\r\n    FilterPipe,\r\n    ListaPostComponent,\r\n    NuevoPostComponent,\r\n    EditarPostComponent,\r\n    FullPostComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n    progressBar: true,\r\n    progressAnimation: 'increasing',\r\n    preventDuplicates: true,\r\n    positionClass: 'toast-bottom-right',\r\n    // closeButton: true\r\n    }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    CKEditorModule\r\n\r\n  ],\r\n  providers: [\r\n    interceptorProvider,\r\n    DecimalPipe, //Para poner decimales con el sistema europeo\r\n\r\n    { provide: LOCALE_ID, useValue: 'es' },  // El de España\r\n\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginUsuario } from '../models/login-usuario';\r\nimport { TokenService } from '../service/token.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n//Se utilizará para comprobar si estamos o no estamos logueados \r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  //variables que nos hacen falta\r\n\r\n  loginUsuario: LoginUsuario; // loginusuario, que es un objeto de la clase login-usuario.ts\r\n\r\n  cargandoLogin: boolean = false;\r\n\r\n  //dos campos, nombre y password, los valores que les pasa al loginusuario\r\n  email: string;\r\n  password: string;\r\n  errMsj: string;  // creada para usarla en el mensaje de error\r\n\r\n  constructor( // inyectamos el tokenservice, auth, router y toastr\r\n    private tokenService: TokenService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Método para hacer el login\r\n  onLogin(): void {\r\n\r\n    this.cargandoLogin = true;\r\n\r\n    //inicializamos el loginusuario y le pasamos el usuario y el password\r\n    this.loginUsuario = new LoginUsuario(this.email, this.password);\r\n\r\n    window.localStorage.UserEmail  = this.email;\r\n\r\n    //Vamos a enviarlo al authservice\r\n    this.authService.login(this.loginUsuario).subscribe( //loginusuario y nos suscribimos\r\n      data => { // hacemos un callback\r\n        this.tokenService.setToken(data.token);\r\n        console.log(data.user);\r\n        this.router.navigate(['/']);  // lo mandamos al index\r\n\r\n        this.cargandoLogin = false;     \r\n      },\r\n      err => { // en caso de error\r\n        this.errMsj = err.error.message;  // variable que habíamos creado para el error, saldrá el mensaje del backend\r\n        this.toastr.error(this.errMsj, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n\r\n        this.cargandoLogin = false;   \r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0cm8uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from '../service/token.service';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NuevoUsuario } from '../models/nuevo-usuario';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.component.html',\r\n  styleUrls: ['./registro.component.css']\r\n})\r\nexport class RegistroComponent implements OnInit {\r\n\r\n  //Similar al login, estas variables están copiadas\r\n\r\n  nuevoUsuario: NuevoUsuario;\r\n  name: string;\r\n  password: string;\r\n  password_confirmation: string;\r\n  email: string;\r\n\r\n  errMsj: string;\r\n\r\n  cargandoRegistro: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //Método para registrarse\r\n  onRegister(): void {\r\n\r\n    this.cargandoRegistro = true;\r\n\r\n    this.nuevoUsuario = new NuevoUsuario(this.name, this.password, this.password_confirmation, this.email);\r\n    this.authService.nuevo(this.nuevoUsuario).subscribe(\r\n      data => {\r\n        this.toastr.success('Cuenta creada', '', {\r\n          timeOut: 3000\r\n        });\r\n\r\n        this.router.navigate(['/login']); //va al login\r\n\r\n    this.cargandoRegistro = false;\r\n      },\r\n      err => { // si hay error\r\n        this.errMsj = err.error.mensaje;\r\n        this.toastr.error(this.errMsj, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n\r\n        this.cargandoRegistro = false;\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { TokenService } from './../service/token.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (this.tokenService.isLogged()) {\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdGuardService implements CanActivate { // Implementamos canactive\r\n\r\n  realRol: string; // variable que es el rol real que vamos a tener, va a ser user o admin\r\n\r\n  constructor(\r\n    private tokenService: TokenService, // inyectamos tokenservice\r\n    private router: Router // inyectamos router\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    const expectedRol = route.data.expectedRol;\r\n    // está el rol real (el que tengo) y el esperado, es decir, el que espero tener\r\n    // mi expectativa es ser administrador pero me quedo en un mero usuario\r\n\r\n    this.realRol = this.tokenService.isAdmin() ? 'admin' : 'user';\r\n\r\n    if (!this.tokenService.isLogged() || expectedRol.indexOf(this.realRol) < 0) {\r\n\r\n      this.router.navigate(['/']); // Va al index porque no puedo acceder\r\n      return false; // Devuelve false\r\n    }\r\n    return true; //En caso contrario, true\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luZGV4L2luZGV4LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from '../service/token.service';\r\nimport { DecimalPipe } from '@angular/common'; // para el decimal\r\nimport { parse } from 'querystring';\r\n\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  nombreUsuario: string; // vacío\r\n  userEmail: string;\r\n\r\n\r\n  constructor(private tokenService: TokenService, private DecimalPipe: DecimalPipe) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.nombreUsuario = this.tokenService.getUserName();\r\n\r\n    this.userEmail = window.localStorage.UserEmail;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdInterceptorService implements HttpInterceptor { // Implementa el interceptor\r\n\r\n  constructor(private tokenService: TokenService) { } // Inyectamos el tokenservice\r\n\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    let intReq = req; // Es req interceptado, por eso el int\r\n\r\n    const token = this.tokenService.getToken();\r\n\r\n    if (token != null) { // si no es nulo\r\n      intReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\r\n      // intreq va a ser igual a req, le pasamos la autorización, el bearer y el token\r\n    }\r\n    return next.handle(intReq);\r\n  }\r\n}\r\n\r\nexport const interceptorProvider = [{ provide: HTTP_INTERCEPTORS, useClass: ProdInterceptorService, multi: true }];\r\n// Lo exportamos, abro llaves, el interceptor, prodinterceptoservice y el multi va a ser true\r\n","export default \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TokenService } from '../service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  isLogged = false;  // variable de si está logueado\r\n\r\n  constructor(private tokenService: TokenService) { }  // le inyectamos un tokenservice\r\n\r\n  ngOnInit() {\r\n    this.isLogged = this.tokenService.isLogged();\r\n  }\r\n\r\n  onLogOut(): void { // Accedes a través del html, para el logout\r\n    this.tokenService.logOut();\r\n  }\r\n  \r\n}\r\n","export class LoginUsuario {\r\n\r\n    email: string;\r\n    password: string;\r\n\r\n    constructor(email: string, password: string) {\r\n        this.email = email;\r\n        this.password = password;\r\n    }\r\n}\r\n","export class NuevoUsuario {\r\n\r\n\r\n    name: string;\r\n    password: string;\r\n    password_confirmation: string;\r\n    email: string;\r\n\r\n\r\n\r\n    constructor(name: string, password: string, password_confirmation: string, email: string, ) {\r\n        this.name = name;\r\n        this.password = password;\r\n        this.password_confirmation = password_confirmation;\r\n        this.email = email;\r\n    }\r\n}\r\n","export class Producto {\r\n\r\n    id?: number;\r\n    name: string;\r\n    price: number;\r\n\r\n\r\n    constructor(name: string, price: number) {\r\n        this.name = name;\r\n        this.price = price; \r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(value: any, arg: any): any {\r\n    \r\n    if (arg === '' || arg.length < 2) return value; // tiene que introducir 2 letras mínimo\r\n    const resultPosts = [];\r\n    for (const post of value) {\r\n      if (post.name.toLowerCase().indexOf(arg.toLowerCase()) > -1) {\r\n        resultPosts.push(post);\r\n      };\r\n    };\r\n\r\n    return resultPosts;\r\n\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvZWRpdGFyLXBvc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Post } from '../models/post';\nimport { PostService } from '../service/post.service';\n\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-editar-post',\n  templateUrl: './editar-post.component.html',\n  styleUrls: ['./editar-post.component.css']\n})\nexport class EditarPostComponent implements OnInit {\n\n  // Si no recuerdo mal, para los modelos del form, es necesario iniciarlas.\n  name = '';\n  body = 'Escribe aquí el cuerpo del artículo';\n  post: Post = null;\n\n  public previsualizacion: string;\n  portada: File = null;\n\n\n  constructor(    private postService: PostService,\n    private activatedRoute: ActivatedRoute,\n    private toastr: ToastrService, private router: Router, private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n\n    const id = this.activatedRoute.snapshot.params.id;\n    this.postService.detail(id).subscribe(\n      data => {\n        this.post = data;\n\n \n        // this.cargando = false;\n\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000, \n        });\n        this.router.navigate(['/']);\n      }\n    );\n\n  }\n\n  onUpdate(): void{\n\n    const id = this.activatedRoute.snapshot.params.id;\n\n    const fd = new FormData();\n    fd.append('id', id);\n    fd.append('name', this.post.name);\n    fd.append('body', this.post.body);\n    fd.append('image', this.portada);\n  //  fd.append('_method', 'PUT');\n\n    // console.log(fd.get('id'));\n\n    this.postService.update(fd).subscribe(\n      data => {\n        this.toastr.success('Artículo editado', '', {\n          timeOut: 2000, \n       \n        });\n        this.router.navigate(['/articulos']);\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000, \n        });\n\n      }\n    );\n  }\n\n\n   captura(event): any{\n\n           // console.log(event.target.files); // la img se encuentra dentro de target.files\n\n           const archivoCapturado = <File>event.target.files[0];\n           \n           this.extraerBase64(archivoCapturado).then((imagen: any) => {\n               this.previsualizacion = imagen.base; // en esta variable almacenamos la codificación de la imagen, base64\n               console.log(imagen);\n             });\n           \n    \n\n             this.portada = archivoCapturado;\n      //     this.archivos.push(archivoCapturado); // En el array creado, incluímos la imagen\n\n  }\n\n     \n  // // El evento que le pasamos, crea una función tipo file, la lee y nos devuelve el base64\n  extraerBase64 = async ($event: any) => new Promise((resolve, reject) => {\n    try {\n      const unsafeImg = window.URL.createObjectURL($event);\n      const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n      const reader = new FileReader();\n      reader.readAsDataURL($event);\n      reader.onload = () => {\n        resolve({\n          base: reader.result\n        });\n      };\n      reader.onerror = error => {\n        resolve({\n          base: null\n        });\n      };\n\n    } catch (e) {\n      return null;\n    }\n  });\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvZnVsbC1wb3N0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Post } from '../models/post';\nimport { PostService } from '../service/post.service';\n\n@Component({\n  selector: 'app-full-post',\n  templateUrl: './full-post.component.html',\n  styleUrls: ['./full-post.component.css']\n})\nexport class FullPostComponent implements OnInit {\n\n  post: Post = null;\n\n  // image: File = null;\n\n  constructor(    \n    private postService: PostService,\n    private activatedRoute: ActivatedRoute,\n    private toastr: ToastrService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n    const id = this.activatedRoute.snapshot.params.id;\n    this.postService.detail(id).subscribe(\n      data => {\n        this.post = data;\n\n        // this.cargando = false;\n\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000\n        });\n        this.volver();\n      });\n\n  }\n\n  // imagen(): void{\n  //   this.postService.image(16).subscribe(\n  //     dataimg => {\n  //       console.log('hola');\n  //       this.image = dataimg;\n\n  //     }, \n  //     err => {\n  //       this.toastr.error(err.error.mensaje, 'Error', {\n  //         timeOut: 3000\n  //       });\n  //     }\n  //   );\n  // }\n  \n  volver(): void {\n    this.router.navigate(['/articulos']);\n  }\n\n}\n","export default \"body{\\r\\n    background-color: #fefefe;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9saXN0YS1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7QUFDN0IiLCJmaWxlIjoic3JjL2FwcC9wb3N0L2xpc3RhLXBvc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlO1xyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Post } from '../models/post';\nimport { PostService } from '../service/post.service';\n\n@Component({\n  selector: 'app-lista-post',\n  templateUrl: './lista-post.component.html',\n  styleUrls: ['./lista-post.component.css']\n})\nexport class ListaPostComponent implements OnInit {\n\n  posts: Post[] = [];\n\n  constructor(private postService: PostService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n\n    this.cargarPosts();\n  }\n\n  cargarPosts() :void{\n\n    this.postService.lista().subscribe(\n      data =>{\n        this.posts = data; // lo carga en el Array que hemos creado, llamado posts\n      }, \n      err => {\n        console.log(err);\n      }\n    );\n\n  }\n\n  borrar(id: number){\n\n    this.postService.delete(id).subscribe(\n      data => {\n        this.toastr.success('Artículo eliminado', '', {\n          timeOut: 3000\n        });\n        this.cargarPosts();\n\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000\n        });\n      }\n    );\n\n\n  }\n\n}\n","export default \"ckeditor{\\r\\n    border-bottom: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9udWV2by1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9wb3N0L251ZXZvLXBvc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImNrZWRpdG9ye1xyXG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxufSJdfQ== */\";","import { PostService } from './../service/post.service';\nimport { Component, OnInit, NgModule, ViewChild } from '@angular/core';\nimport { post } from 'jquery';\nimport { Post } from '../models/post';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\nimport { CKEditorComponent } from 'ckeditor4-angular';\n\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport Base64UploadAdapter from '@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter';\n\n\n@Component({\n  selector: 'app-nuevo-post',\n  templateUrl: './nuevo-post.component.html',\n  styleUrls: ['./nuevo-post.component.css']\n})\nexport class NuevoPostComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  \n  name = '';\n  body = 'Escribe aquí el cuerpo del artículo';\n\n  public archivos: any = [];\n\n  public previsualizacion: string;\n\n  portada: File = null;\n\n    // config.uiColor = '#F7B42C';\n \n  \n  // editorData: '<p>Hello, world!</p>';\n\n\n\n\n  // ckeditorContent: string = 'probando';\n  @ViewChild(CKEditorComponent) ckEditor: CKEditorComponent;\n\n  ngAfterViewChecked(){\n    let editor = this.ckEditor.instance;\n    editor.config.height = '200';\n    editor.config.toolbarGroups = [\n      { name: 'document', groups: ['mode', 'document', 'doctools']}\n    ]\n  }\n\n  constructor(private postService: PostService, private toastr: ToastrService,\n    private router: Router, private sanitizer: DomSanitizer) {\n\n      console.log(this.name);\n      \n     }\n\n  ngOnInit() {\n\n\n  }\n\n  // onCreate(): void{\n\n  //   this.subirArchivo();\n\n  //   // const post = new Post(this.name, this.body, formularioDeDatos);\n  //   // this.postService.save(post).subscribe(\n  //   //   data => {\n  //   //     this.toastr.success('Artículo creado', '', {\n  //   //       timeOut: 3000\n  //   //     });\n  //   //     this.router.navigate(['/articulos']);\n  //   //   },\n  //   //   err => {\n  //   //     this.toastr.error(err.error.mensaje, 'Error', {\n  //   //       timeOut: 3000\n  //   //     });\n\n  //   //   }\n  //   // );\n  // }\n\n  // subirArchivo(): any {\n  //   try {\n  //   //  this.loading = true;\n  //     const formularioDeDatos = new FormData(); // Es un archivo que tiene datos binarios, necesitamos un formdata\n  //     this.archivos.forEach(archivo => {\n  //       formularioDeDatos.append('files', archivo)    // Nombre que la api o servicio nos pida\n  //       // ---------------------------------------CREO QUE DEBO INCLUIR archivo EN LA LLAMADA AL SERVICIO\n  //      console.log('función subir')\n  //       console.log(archivo);\n  //     })\n\n  //     const post = new Post(this.name, this.body, formularioDeDatos);\n  //     this.postService.save(post).subscribe(\n  //       data => {\n  //         this.toastr.success('Artículo creado', '', {\n  //           timeOut: 3000\n  //         });\n  //         this.router.navigate(['/articulos']);\n  //       },\n  //       err => {\n  //         this.toastr.error(err.error.mensaje, 'Error', {\n  //           timeOut: 3000\n  //         });\n  \n  //       }\n  //     );\n\n\n  //     //  formularioDeDatos.append('_id', 'MY_ID_123')\n  //   //   this.postService.save(post)\n  //   //     .subscribe(res => {\n  //   //  //     this.loading = false;\n  //   //       console.log('Respuesta del servidor', res);\n\n  //   //     }, () => {\n  //   //  //     this.loading = false;\n  //   //       alert('Error');\n  //   //     })\n  //   } catch (e) {\n  //  //   this.loading = false;\n  //     console.log('ERROR', e);\n\n  //   }\n  // }\n\n\n  // ckeditor(){\n\n  //     ClassicEditor\n  // .create( document.querySelector( '#ckeditor' ) )\n  // .catch( error => {\n  //     console.error( error );\n  // } );\n  // }\n\n  captura(event): any{\n\n           // console.log(event.target.files); // la img se encuentra dentro de target.files\n\n           const archivoCapturado = <File>event.target.files[0];\n           \n           this.extraerBase64(archivoCapturado).then((imagen: any) => {\n               this.previsualizacion = imagen.base; // en esta variable almacenamos la codificación de la imagen, base64\n               console.log(imagen);\n             });\n           \n       \n\n             this.portada = archivoCapturado;\n      //     this.archivos.push(archivoCapturado); // En el array creado, incluímos la imagen\n\n  }\n\n  crea(): void{\n\n    const fd = new FormData();\n    fd.append('name', this.name);\n    fd.append('body', this.body);\n    fd.append('image', this.portada);\n\n    this.postService.save(fd).subscribe(\n      data => {\n        this.toastr.success('Artículo creado', '', {\n          timeOut: 3000\n        });\n        this.router.navigate(['/articulos']);\n      },\n      err => {\n        this.toastr.error(err.error.mensaje, 'Error', {\n          timeOut: 3000\n        });\n\n      }\n    );\n    console.log('aquí estaría con el post mandado')\n  }\n\n  // capturarFile(event): any{\n\n  //       // console.log(event.target.files); // la img se encuentra dentro de target.files\n\n  //   const archivoCapturado = event.target.files[0];\n  //   this.extraerBase64(archivoCapturado).then((imagen: any) => {\n  //       this.previsualizacion = imagen.base; // en esta variable almacenamos la codificación de la imagen, base64\n  //       console.log(imagen);\n  //     });\n    \n\n  //   this.archivos.push(archivoCapturado); // En el array creado, incluímos la imagen\n\n  // }\n\n   \n  // // El evento que le pasamos, crea una función tipo file, la lee y nos devuelve el base64\n  extraerBase64 = async ($event: any) => new Promise((resolve, reject) => {\n    try {\n      const unsafeImg = window.URL.createObjectURL($event);\n      const image = this.sanitizer.bypassSecurityTrustUrl(unsafeImg);\n      const reader = new FileReader();\n      reader.readAsDataURL($event);\n      reader.onload = () => {\n        resolve({\n          base: reader.result\n        });\n      };\n      reader.onerror = error => {\n        resolve({\n          base: null\n        });\n      };\n\n    } catch (e) {\n      return null;\n    }\n  });\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RvL2RldGFsbGUtcHJvZHVjdG8uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ProductoService } from '../service/producto.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Producto } from '../models/producto';\r\n\r\n@Component({\r\n  selector: 'app-detalle-producto',\r\n  templateUrl: './detalle-producto.component.html',\r\n  styleUrls: ['./detalle-producto.component.css']\r\n})\r\nexport class DetalleProductoComponent implements OnInit {\r\n\r\n  producto: Producto = null;\r\n\r\n  cargando: boolean = true;\r\n\r\n\r\n\r\n  constructor(\r\n    private productoService: ProductoService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this.productoService.detail(id).subscribe(\r\n      data => {\r\n        this.producto = data;\r\n\r\n        this.cargando = false;\r\n\r\n\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n        this.volver();\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  volver(): void {\r\n    this.router.navigate(['/lista']);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RvL2VkaXRhci1wcm9kdWN0by5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Producto } from '../models/producto';\r\nimport { ProductoService } from '../service/producto.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-editar-producto',\r\n  templateUrl: './editar-producto.component.html',\r\n  styleUrls: ['./editar-producto.component.css']\r\n})\r\nexport class EditarProductoComponent implements OnInit {\r\n\r\n  producto: Producto = null;\r\n\r\n  cargandoeditar: boolean = true;\r\n\r\n  constructor(\r\n    private productoService: ProductoService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  //Para ver los detalles \r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this.productoService.detail(id).subscribe(\r\n      data => {\r\n        this.producto = data;\r\n\r\n        this.cargandoeditar = false;\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n        this.router.navigate(['/']);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Para actualizar la información\r\n  onUpdate(): void {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this.productoService.update(id, this.producto).subscribe(\r\n      data => {\r\n        this.toastr.success('Producto actualizado', '', {\r\n          timeOut: 3000\r\n        });\r\n        this.router.navigate(['/lista']);\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RvL2xpc3RhLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Producto } from '../models/producto';\r\nimport { ProductoService } from '../service/producto.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TokenService } from '../service/token.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { IndexComponent } from '../index/index.component';\r\nimport { Sinid } from '../models/sinid';\r\n\r\nimport { DecimalPipe } from '@angular/common'; // para decimal pipe\r\n\r\n@Component({\r\n  selector: 'app-lista-producto',\r\n  templateUrl: './lista-producto.component.html',\r\n  styleUrls: ['./lista-producto.component.css']\r\n})\r\nexport class ListaProductoComponent implements OnInit {\r\n\r\n  productos: Producto[] = [];\r\n  productosCartera: Producto[] = [];\r\n\r\n  cargando: boolean = true;\r\n\r\n  duplicado: Producto[] = [];\r\n\r\n  listaAdmin: Producto[] = [];\r\n\r\n  isAdmin = false;\r\n\r\n  //Para cargar usuario\r\n  isLogged = false;\r\n  nombreUsuario: string = '';\r\n\r\n  idcartera: string = 'juan';\r\n\r\n  filterPost = '';\r\n\r\n  constructor(\r\n\r\n    private productoService: ProductoService,\r\n    private toastr: ToastrService,\r\n    private tokenService: TokenService,\r\n    private router: Router,\r\n    private DecimalPipe: DecimalPipe\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.cargarProductos(); // Carga los productos\r\n\r\n\r\n    this.isAdmin = this.tokenService.isAdmin();\r\n\r\n  }\r\n\r\n  // SistemaEuropeo(SistemaAmericano :number){ // Lo modifico\r\n  //   let TerConComa = this.DecimalPipe.transform(SistemaAmericano, \"1.2-2\", 'es')\r\n  //   return TerConComa;\r\n  // }\r\n\r\n  cargarProductos(): void {\r\n\r\n\r\n\r\n    this.productoService.lista().subscribe(\r\n      data => {\r\n        this.productos = data; // lo carga en el Array que hemos creado, llamado productos\r\n\r\n        this.cargando = false;\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  borrar(id: number) {\r\n    this.productoService.delete(id).subscribe(\r\n      data => {\r\n        this.toastr.success('Producto eliminado', '', {\r\n          timeOut: 3000\r\n        });\r\n        this.cargarProductos();\r\n\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RvL251ZXZvLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ProductoService } from '../service/producto.service';\r\nimport { Producto } from '../models/producto';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nuevo-producto',\r\n  templateUrl: './nuevo-producto.component.html',\r\n  styleUrls: ['./nuevo-producto.component.css']\r\n})\r\nexport class NuevoProductoComponent implements OnInit {\r\n\r\n  name = '';\r\n  price: number = null;\r\n\r\n  constructor(\r\n    private productoService: ProductoService,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) { \r\n\r\n    // Popover que uso para informar al usuario del lugar donde se encuentra el ID de los vídeos de Youtube\r\n    $(document).ready(function () {\r\n      (<any>$('[data-toggle=\"popover\"]')).popover({\r\n        placement: 'top',\r\n        trigger: 'hover'\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //Crear uno nuevo\r\n  onCreate(): void {\r\n\r\n    const producto = new Producto(this.name, this.price);\r\n    this.productoService.save(producto).subscribe(\r\n      data => {\r\n        this.toastr.success('Producto creado', '', {\r\n          timeOut: 3000\r\n        });\r\n        this.router.navigate(['/lista']);\r\n      },\r\n      err => {\r\n        this.toastr.error(err.error.mensaje, 'Error', {\r\n          timeOut: 3000\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NuevoUsuario } from '../models/nuevo-usuario';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginUsuario } from '../models/login-usuario';\r\nimport { JwtDTO } from '../models/jwt-dto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  authURL = 'http://127.0.0.1/api/';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public nuevo(nuevoUsuario: NuevoUsuario): Observable<any> {\r\n    return this.httpClient.post<any>(this.authURL + 'register', nuevoUsuario);\r\n  }\r\n\r\n  public login(loginUsuario: LoginUsuario): Observable<JwtDTO> {\r\n    return this.httpClient.post<JwtDTO>(this.authURL + 'login', loginUsuario);\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Post } from '../models/post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private httpClient: HttpClient) { }\n\n    postURL =  'http://127.0.0.1/api/posts';\n\n    params: HttpParams = new HttpParams().set(\"_method\",\"PUT\"); //Create new HttpParams\n\n\n    public lista(): Observable<Post[]>{\n\n      return this.httpClient.get<Post[]>(this.postURL);\n\n    }\n\n    public image(id: number): Observable<any>{\n\n      return this.httpClient.get<any>(this.postURL + `/${id}/image`);\n    }\n    \n    // public save(post: Post): Observable<any>{\n\n    //   return this.httpClient.post<any>(this.postURL, post);\n\n    // }\n\n    public save(post: FormData): Observable<any>{\n\n      return this.httpClient.post<any>(this.postURL, post);\n    }\n\n    // public save(post: Post, image: string): Observable<any>{\n\n    //   return this.httpClient.post<any>(this.postURL, post);\n\n    // }\n    public detail(id: number): Observable<Post>{\n      return this.httpClient.get<Post>(this.postURL + `/${id}`);\n    }\n\n    // public update(id: number, post: Post): Observable<any>{\n    //   return this.httpClient.put<any>(this.postURL + `/${id}`, post);\n    // }\n\n    public update(post: FormData): Observable<any>{\n      return this.httpClient.post<any>(this.postURL + `/` + post.get(`id`)+ '?_method=PUT', post);  \n    }\n\n    public delete(id: number): Observable<any>{\n      return this.httpClient.delete<any>(this.postURL + `/${id}`);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Producto } from '../models/producto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductoService {\r\n\r\n  productoURL = 'http://127.0.0.1/api/products';\r\n  \r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public lista(): Observable<Producto[]> {\r\n    return this.httpClient.get<Producto[]>(this.productoURL);\r\n  }\r\n\r\n  public detail(id: number): Observable<Producto> {\r\n    return this.httpClient.get<Producto>(this.productoURL + `/${id}`);\r\n  }\r\n\r\n\r\n  public save(producto: Producto): Observable<any> {\r\n    return this.httpClient.post<any>(this.productoURL, producto);\r\n  }\r\n\r\n\r\n  public update(id: number, producto: Producto): Observable<any> {\r\n    return this.httpClient.put<any>(this.productoURL + `/${id}`, producto);\r\n  }\r\n\r\n  public delete(id: number): Observable<any> {\r\n    return this.httpClient.delete<any>(this.productoURL + `/${id}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nconst TOKEN_KEY = 'AuthToken';  // de clave\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  //Creamos un array con los roles\r\n\r\n  roles: Array<string> = [];\r\n\r\n  constructor(\r\n    private router: Router\r\n\r\n  ) { }\r\n\r\n  //getter y setter\r\n\r\n  public setToken(token: string): void {\r\n    window.localStorage.removeItem(TOKEN_KEY);\r\n    window.localStorage.setItem(TOKEN_KEY, token); // token key y el token que le estamos pasando como parámetro\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public isLogged(): boolean {\r\n    if (this.getToken()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  public getUserName(): string {\r\n    if (!this.isLogged()) {\r\n      return null;\r\n    }\r\n    // el token tiene un aspecto similar a este: dijsdnfdjinf.fasidjnffi.fisjdfnsdif \r\n    // se compone de: header, payload y firma\r\n    // ahora nos interesa el payload\r\n    // Para sacarlo, lo primero que hacemos es convertir la cadena en un array de cadenas\r\n\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    //split convierte un array a partir de un caracter, le ponemos posición 1 para acceder al payload\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded); // parseamos a JSON\r\n    const username = values.sub;\r\n    return username;\r\n  }\r\n\r\n  public isAdmin(): boolean {\r\n    if (!this.isLogged()) {\r\n      return false;\r\n    }\r\n    // el token tiene un aspecto similar a este: dijsdnfdjinf.fasidjnffi.fisjdfnsdif \r\n    // se compone de: header, payload y firma\r\n    // ahora nos interesa el payload\r\n    // lo primero que hacemos es convertir la cadena en un array de cadenas\r\n\r\n    const token = this.getToken();\r\n    const payload = token.split('.')[1];\r\n    //split convierte un array a partir de un caracter, le ponemos posición 1 para acceder al payload\r\n    const payloadDecoded = atob(payload);\r\n    const values = JSON.parse(payloadDecoded); // parseamos a JSON\r\n//    const roles = values.roles;\r\n\r\n    return true;\r\n  }\r\n\r\n  //Para cerrar sesión\r\n  public logOut(): void {\r\n    window.localStorage.clear(); // Va a limpiar todo lo que tengamos en el sesionstorage\r\n    this.router.navigate(['/login']); // Vamos a inicio\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  productoURL: 'http://localhost:8080/producto/',\r\n  authURL: 'http://localhost:8080/auth/'\r\n};\r\n//Lo ponemos aquí porque de momento estamos en desarrollo\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}